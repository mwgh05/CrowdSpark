{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\EnlistarProyecto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/PlataformaGestion.css';\nimport logo from '../images/icon.png';\nimport { useNavigate, Link } from 'react-router-dom';\n\n// Import Firebase\nimport app from '../firebaseConfig.js';\nimport { getDatabase, ref, get } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrearProyecto() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch projects from Firebase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const db = getDatabase(app);\n        const projectsRef = ref(db, 'proyectos');\n        const snapshot = await get(projectsRef);\n        if (snapshot.exists()) {\n          const projectsData = [];\n          snapshot.forEach(childSnapshot => {\n            projectsData.push({\n              id: childSnapshot.key,\n              data: childSnapshot.val()\n            });\n          });\n          setProjects(projectsData);\n        } else {\n          console.log('No projects found');\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/project/${project.id}`,\n            children: project.data.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/create-project'),\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(CrearProyecto, \"NL/tNDyUKrVYHu+D4sC6F6i/kGw=\", false, function () {\n  return [useNavigate];\n});\n_c = CrearProyecto;\nvar _c;\n$RefreshReg$(_c, \"CrearProyecto\");","map":{"version":3,"names":["React","useState","useEffect","logo","useNavigate","Link","app","getDatabase","ref","get","jsxDEV","_jsxDEV","CrearProyecto","_s","projects","setProjects","navigate","fetchProjects","db","projectsRef","snapshot","exists","projectsData","forEach","childSnapshot","push","id","key","data","val","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","to","nombre","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/EnlistarProyecto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/PlataformaGestion.css';\r\nimport logo from '../images/icon.png';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\n// Import Firebase\r\nimport app from '../firebaseConfig.js';\r\nimport { getDatabase, ref, get } from 'firebase/database';\r\n\r\nexport default function CrearProyecto() {\r\n    const [projects, setProjects] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch projects from Firebase\r\n    useEffect(() => {\r\n        const fetchProjects = async () => {\r\n            try {\r\n                const db = getDatabase(app);\r\n                const projectsRef = ref(db, 'proyectos');\r\n                const snapshot = await get(projectsRef);\r\n                if (snapshot.exists()) {\r\n                    const projectsData = [];\r\n                    snapshot.forEach((childSnapshot) => {\r\n                        projectsData.push({\r\n                            id: childSnapshot.key,\r\n                            data: childSnapshot.val()\r\n                        });\r\n                    });\r\n                    setProjects(projectsData);\r\n                } else {\r\n                    console.log('No projects found');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching projects:', error);\r\n            }\r\n        };\r\n\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"App-content\">\r\n            <div>\r\n                <h2>Projects</h2>\r\n                <ul>\r\n                    {projects.map((project) => (\r\n                        <li key={project.id}>\r\n                            <Link to={`/project/${project.id}`}>\r\n                                {project.data.nombre}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <button onClick={() => navigate('/create-project')}>Create Project</button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gCAAgC;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;;AAEpD;AACA,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,EAAE,GAAGX,WAAW,CAACD,GAAG,CAAC;QAC3B,MAAMa,WAAW,GAAGX,GAAG,CAACU,EAAE,EAAE,WAAW,CAAC;QACxC,MAAME,QAAQ,GAAG,MAAMX,GAAG,CAACU,WAAW,CAAC;QACvC,IAAIC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;UACnB,MAAMC,YAAY,GAAG,EAAE;UACvBF,QAAQ,CAACG,OAAO,CAAEC,aAAa,IAAK;YAChCF,YAAY,CAACG,IAAI,CAAC;cACdC,EAAE,EAAEF,aAAa,CAACG,GAAG;cACrBC,IAAI,EAAEJ,aAAa,CAACK,GAAG,CAAC;YAC5B,CAAC,CAAC;UACN,CAAC,CAAC;UACFd,WAAW,CAACO,YAAY,CAAC;QAC7B,CAAC,MAAM;UACHQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACpC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDf,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAASsB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC5BvB,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB3B,OAAA;QAAAuB,QAAA,EACKpB,QAAQ,CAACyB,GAAG,CAAEC,OAAO,iBAClB7B,OAAA;UAAAuB,QAAA,eACIvB,OAAA,CAACN,IAAI;YAACoC,EAAE,EAAG,YAAWD,OAAO,CAACd,EAAG,EAAE;YAAAQ,QAAA,EAC9BM,OAAO,CAACZ,IAAI,CAACc;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC,GAHFE,OAAO,CAACd,EAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIf,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACL3B,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAM3B,QAAQ,CAAC,iBAAiB,CAAE;QAAAkB,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAACzB,EAAA,CAhDuBD,aAAa;EAAA,QAEhBR,WAAW;AAAA;AAAAwC,EAAA,GAFRhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}