{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\CrearProyecto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/PlataformaGestion.css';\nimport logo from '../images/icon.png';\nimport { Link } from \"react-router-dom\";\n\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\nimport { useParams } from 'react-router-dom';\n\n//Base de datos por firebase\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, get, ref } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrearProyecto() {\n  _s();\n  const {\n    usuarioID\n  } = useParams();\n\n  //Usamos el state para restaurar datos o información\n  const [usuarioActual, setUsuarioActual] = useState(null);\n\n  //Muy basado en Registrar.jsx, checar la documentación de éste\n  const [nuevoProyecto, setNuevoProyecto] = useState({\n    nombre: \"\",\n    fecha: \"\",\n    tareas: [],\n    colaboradores: [usuarioID],\n    lider: usuarioActual.usuarioID\n  });\n  const navigate = useNavigate();\n  console.log(\"Parametro recibido: \", usuarioID);\n\n  //Sacamos los datos de los usuarios\n  useEffect(() => {\n    const fetchUsuario = async () => {\n      try {\n        //Primero seteamos la base de datos como tal, checando directamente la id\n        const db = getDatabase(app);\n        const dbRef = ref(db, `usuarios/${usuarioID}`);\n\n        //Tomamos la data directamente de dicho usuarioID\n        const snapshot = await get(dbRef);\n\n        //Checamos si existe un snapshot con dicha información específica\n        if (snapshot.exists()) {\n          //Extraemos la información del usuario del snapshot\n          const userData = snapshot.val();\n\n          //Seteamos la data de usuario en nuestro estado global de usuario\n          setUsuarioActual(userData);\n        } else {\n          console.log(\"No se encontró un usuario con dicha información\");\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    fetchUsuario();\n  }, [usuarioID]); //Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\n\n  //Función para establecer cambios\n  const handleUserChange = event => {\n    setNuevoProyecto(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const handleCrearProyecto = async event => {\n    event.preventDefault();\n    try {\n      const db = getDatabase();\n      if (!nuevoProyecto.nombre || !nuevoProyecto.fecha) {\n        alert('Por favor, completa todos los campos.');\n        return;\n      }\n\n      //Creamos una carpeta o archivo basado en el string de posición\n      const newProyectoRef = push(ref(db, \"proyectos\"));\n      await set(newProyectoRef, {\n        nombre: nuevoProyecto.nombre,\n        correo: nuevoProyecto.fecha,\n        tareas: nuevoProyecto.tareas,\n        colaboradores: nuevoProyecto.colaboradores,\n        lider: nuevoProyecto.lider\n      });\n      //Extraemos la ID de la recién usada fila creada de proyecto\n      const newProyectoID = newProyectoRef.key;\n      alert(\"La data ha sido guardada de forma exitosa\");\n      console.log(\"ID: \", newProyectoID);\n      console.log(\"Proyecto: \", newProyectoRef);\n      navigate(`/Proyectos/${usuarioActual.usuarioID}`);\n    } catch (error) {\n      console.error(\"Ha aparecido un error: \", error);\n      alert(\"Error al guardar los datos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"Titulo\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correo Electr\\xF3nico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'text',\n          placeholder: \"Aplicacion\",\n          name: \"nombre\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'date',\n          placeholder: \"2018-06-12\",\n          name: \"fecha\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCrearProyecto,\n          children: \"Crear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n}\n_s(CrearProyecto, \"4iVR5iM78aFMZf3ny1r+voxqo8E=\", true, function () {\n  return [useParams];\n});\n_c = CrearProyecto;\nvar _c;\n$RefreshReg$(_c, \"CrearProyecto\");","map":{"version":3,"names":["React","useState","useEffect","logo","Link","useParams","app","getDatabase","get","ref","jsxDEV","_jsxDEV","CrearProyecto","_s","usuarioID","usuarioActual","setUsuarioActual","nuevoProyecto","setNuevoProyecto","nombre","fecha","tareas","colaboradores","lider","navigate","useNavigate","console","log","fetchUsuario","db","dbRef","snapshot","exists","userData","val","error","handleUserChange","event","prev","target","name","value","handleCrearProyecto","preventDefault","alert","newProyectoRef","push","set","correo","newProyectoID","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/CrearProyecto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/PlataformaGestion.css';\r\nimport logo from '../images/icon.png';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref } from 'firebase/database';\r\n\r\nexport default function CrearProyecto() {\r\n    const { usuarioID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n\r\n    //Muy basado en Registrar.jsx, checar la documentación de éste\r\n    const [nuevoProyecto, setNuevoProyecto] = useState({\r\n      nombre:\"\",\r\n      fecha:\"\",\r\n      tareas:[],\r\n      colaboradores:[usuarioID],\r\n      lider:usuarioActual.usuarioID\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    \r\n\r\n    console.log(\"Parametro recibido: \", usuarioID);\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n        const fetchUsuario = async() => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                }else{\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n    }, [usuarioID]); //Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\r\n\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n      setNuevoProyecto(\r\n        prev => ({...prev, [event.target.name]: event.target.value})\r\n      );\r\n    }\r\n\r\n\r\n    const handleCrearProyecto = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            const db = getDatabase();\r\n\r\n            if (!nuevoProyecto.nombre || \r\n                !nuevoProyecto.fecha) {\r\n                alert('Por favor, completa todos los campos.');\r\n                return;\r\n            }\r\n\r\n            //Creamos una carpeta o archivo basado en el string de posición\r\n            const newProyectoRef = push(ref(db, \"proyectos\"));\r\n            await set(newProyectoRef, {\r\n                nombre: nuevoProyecto.nombre,\r\n                correo: nuevoProyecto.fecha,\r\n                tareas: nuevoProyecto.tareas,\r\n                colaboradores: nuevoProyecto.colaboradores,\r\n                lider: nuevoProyecto.lider\r\n            });\r\n            //Extraemos la ID de la recién usada fila creada de proyecto\r\n            const newProyectoID = newProyectoRef.key;\r\n\r\n            alert(\"La data ha sido guardada de forma exitosa\");\r\n\r\n            console.log(\"ID: \", newProyectoID);\r\n            console.log(\"Proyecto: \", newProyectoRef);\r\n\r\n            navigate(`/Proyectos/${usuarioActual.usuarioID}`);\r\n        } catch (error) {\r\n            console.error(\"Ha aparecido un error: \", error);\r\n            alert(\"Error al guardar los datos\");\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n      <section className=\"App-content\">\r\n        <form className='Form'>\r\n          <div className='Elemento'>\r\n            <label className='Titulo'>Login</label>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Correo Electrónico</label>\r\n            <input type={'text'} placeholder='Aplicacion' name='nombre'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Contraseña</label>\r\n            <input type={'date'} placeholder='2018-06-12' name='fecha'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n\r\n          <div className='Elemento'>\r\n            <button onClick={handleCrearProyecto}>Crear</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}