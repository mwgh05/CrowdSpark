{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles/PlataformaGestion.css';import logo from'../images/icon.png';import{useNavigate}from\"react-router-dom\";/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/import{useParams}from'react-router-dom';//Base de datos por firebase\nimport app from\"../firebaseConfig.js\";import{getDatabase,get,ref,set,push}from'firebase/database';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CrearTarea(){const{usuarioID,proyectoID}=useParams();//Usamos el state para restaurar datos o información\nconst[usuarioActual,setUsuarioActual]=useState(null);const[proyectoActual,setProyectoActual]=useState(null);console.log(\"Par\\xE1metros recibidos: \".concat(usuarioID));console.log(\"Par\\xE1metros recibidos: \".concat(proyectoID));//Muy basado en Registrar.jsx, checar la documentación de éste\nconst[nuevaTarea,setNuevaTarea]=useState({nombre:\"\",fecha:\"\",encargados:[],descripción:\"\"});const navigate=useNavigate();//Sacamos los datos de los usuarios\nuseEffect(()=>{const fetchUsuario=async()=>{try{//Primero seteamos la base de datos como tal, checando directamente la id\nconst db=getDatabase(app);const dbRef=ref(db,\"usuarios/\".concat(usuarioID));//Tomamos la data directamente de dicho usuarioID\nconst snapshot=await get(dbRef);//Checamos si existe un snapshot con dicha información específica\nif(snapshot.exists()){//Extraemos la información del usuario del snapshot\nconst userData=snapshot.val();//Seteamos la data de usuario en nuestro estado global de usuario\nsetUsuarioActual(userData);console.log(\"Dentro de crearTarea, si agarramos usuario\");}else{console.log(\"No se encontró un usuario con dicha información\");}}catch(error){console.error(\"Error consiguiendo la información del usuario\");}};const fetchProyecto=async()=>{try{const db=getDatabase(app);const dbRef=ref(db,\"proyectos/\".concat(proyectoID));const snapshot=await get(dbRef);if(snapshot.exists()){const projectData=snapshot.val();setProyectoActual(projectData);console.log(\"Dentro de crearTarea, si agarramos proyecto\");}}catch(error){console.error(\"Error consiguiendo la información del usuario\");}};fetchUsuario();fetchProyecto();},[usuarioID,proyectoID]);//Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\n//Función para establecer cambios\nconst handleUserChange=event=>{setNuevaTarea(prev=>({...prev,[event.target.name]:event.target.value}));};const handleCrearTarea=async event=>{event.preventDefault();try{const db=getDatabase(app);if(!nuevaTarea.nombre||!nuevaTarea.descripción||!nuevaTarea.fecha||!nuevaTarea.descripción){alert('Por favor, completa todos los campos.');return;}//Creamos una carpeta o archivo basado en el string de posición\nconst newProyectoRef=push(ref(db,\"tareas\"));await set(newProyectoRef,{nombre:nuevaTarea.nombre,fecha:nuevaTarea.fecha,encargados:nuevaTarea.encargados,descripcion:nuevaTarea.descripción});alert(\"La Tarea ha sido guardada de forma exitosa\");navigate(\"/Proyectos/\".concat(usuarioID));}catch(error){console.error(\"Ha aparecido un error: \",error);alert(\"Error al guardar los datos\");}};if(!usuarioID||!proyectoID||!usuarioActual||!proyectoActual){return/*#__PURE__*/_jsx(\"div\",{children:\"Cargando\"});}return/*#__PURE__*/_jsx(\"section\",{className:\"App-content\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"Form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"label\",{className:\"Titulo\",children:\"Crear Tarea en el Proyecto\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:'text',placeholder:\"Crear un Login\",name:\"nombre\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Fecha y hora de entrega\"}),/*#__PURE__*/_jsx(\"input\",{type:'datetime-local',placeholder:\"2018-06-12T19:30\",name:\"fecha\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Descripci\\xF3n completa de la Tarea\"}),/*#__PURE__*/_jsx(\"input\",{type:'text',placeholder:\"Los encargados como tal deben de empezar la funci\\xF3n de... \",name:\"descripci\\xF3n\",onChange:handleUserChange})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleCrearTarea,children:\"Crear\"})})]})});}","map":{"version":3,"names":["React","useState","useEffect","logo","useNavigate","useParams","app","getDatabase","get","ref","set","push","jsx","_jsx","jsxs","_jsxs","CrearTarea","usuarioID","proyectoID","usuarioActual","setUsuarioActual","proyectoActual","setProyectoActual","console","log","concat","nuevaTarea","setNuevaTarea","nombre","fecha","encargados","descripción","navigate","fetchUsuario","db","dbRef","snapshot","exists","userData","val","error","fetchProyecto","projectData","handleUserChange","event","prev","target","name","value","handleCrearTarea","preventDefault","alert","newProyectoRef","descripcion","children","className","type","placeholder","onChange","onClick"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/CrearTarea.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/PlataformaGestion.css';\r\nimport logo from '../images/icon.png';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref, set, push } from 'firebase/database';\r\n\r\nexport default function CrearTarea() {\r\n    const { usuarioID, proyectoID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n    const [proyectoActual, setProyectoActual] = useState(null);\r\n\r\n    console.log(`Parámetros recibidos: ${usuarioID}`);\r\n    console.log(`Parámetros recibidos: ${proyectoID}`);\r\n\r\n    //Muy basado en Registrar.jsx, checar la documentación de éste\r\n    const [nuevaTarea, setNuevaTarea] = useState({\r\n      nombre:\"\",\r\n      fecha:\"\",\r\n      encargados: [],\r\n      descripción: \"\"\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n        const fetchUsuario = async() => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                    console.log(\"Dentro de crearTarea, si agarramos usuario\");\r\n                }else{\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        const fetchProyecto = async() => {\r\n            try{\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `proyectos/${proyectoID}`);\r\n                const snapshot = await get(dbRef);\r\n\r\n                if (snapshot.exists()){\r\n                    const projectData = snapshot.val();\r\n                    setProyectoActual(projectData);\r\n                    console.log(\"Dentro de crearTarea, si agarramos proyecto\");\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n        fetchProyecto();\r\n    }, [usuarioID, proyectoID]); //Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\r\n\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n      setNuevaTarea(\r\n        prev => ({...prev, [event.target.name]: event.target.value})\r\n      );\r\n    }\r\n\r\n\r\n    const handleCrearTarea = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            const db = getDatabase(app);\r\n\r\n            if (!nuevaTarea.nombre || \r\n                !nuevaTarea.descripción ||\r\n                !nuevaTarea.fecha ||\r\n                !nuevaTarea.descripción) {\r\n                alert('Por favor, completa todos los campos.');\r\n                return;\r\n            }\r\n\r\n            //Creamos una carpeta o archivo basado en el string de posición\r\n            const newProyectoRef = push(ref(db, \"tareas\"));\r\n            await set(newProyectoRef, {\r\n                nombre: nuevaTarea.nombre,\r\n                fecha: nuevaTarea.fecha,\r\n                encargados: nuevaTarea.encargados,\r\n                descripcion: nuevaTarea.descripción\r\n            });\r\n            alert(\"La Tarea ha sido guardada de forma exitosa\");\r\n            \r\n            navigate(`/Proyectos/${usuarioID}`);\r\n        } catch (error) {\r\n            console.error(\"Ha aparecido un error: \", error);\r\n            alert(\"Error al guardar los datos\");\r\n        }\r\n    }\r\n    \r\n    if (!usuarioID || !proyectoID || !usuarioActual || !proyectoActual){\r\n        return <div>Cargando</div>\r\n    }\r\n\r\n    return (\r\n      <section className=\"App-content\">\r\n        <form className='Form'>\r\n            <div className='Elemento'>\r\n                <label className='Titulo'>Crear Tarea en el Proyecto</label>\r\n            </div>\r\n\r\n            <div className='Elemento'>\r\n                <label>Nombre</label>\r\n                <input type={'text'} placeholder='Crear un Login' name='nombre'\r\n                onChange={handleUserChange}/>\r\n            </div>\r\n\r\n            <div className='Elemento'>\r\n                <label>Fecha y hora de entrega</label>\r\n                <input type={'datetime-local'} placeholder='2018-06-12T19:30' name='fecha'\r\n                onChange={handleUserChange}/>\r\n            </div>\r\n\r\n            <div className='Elemento'>\r\n                <label>Descripción completa de la Tarea</label>\r\n                <input type={'text'} placeholder='Los encargados como tal deben de empezar la función de... '\r\n                name='descripción' onChange={handleUserChange}/>\r\n            </div>\r\n\r\n            <div className='Elemento'>\r\n                <button onClick={handleCrearTarea}>Crear</button>\r\n            </div>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}