{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles/IniciarSesion.css';//Importamos las librerías\n//Cambiar modos de contraseña o correo\n//Importamos url y axios para uso de api  (Base de datos local)\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\n//import { URL } from './data.js'\n//Importamos el sistema a cambiar de página\nimport{useNavigate,Link}from\"react-router-dom\";//Base de datos por firebase\nimport app from\"../firebaseConfig.js\";import{getDatabase,ref,get}from\"firebase/database\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function IniciarSesion(){//Muy basado en Registrar.jsx, checar la documentación de éste\nconst[usuarioLogin,setUsuarioLogin]=useState({correo:\"\",password:\"\"});const[usuarios,setUsuarios]=useState([]);const navigate=useNavigate();//Sacamos los datos de los usuarios\nuseEffect(()=>{const fetchAllUsers=async()=>{//Tomamos la base de datos a la cual nos conectamos\nconst db=getDatabase(app);//Referenciamos la base de datos, la ubicación donde guardamos los usuarios\nconst dbRef=ref(db,\"usuarios\");//Buscamos información dentro de los casos, mediante un snapshot\nconst snapshot=await get(dbRef);//Checar documentación de la siguiente modificación de datas en CambiarContraseña.jsx\nif(snapshot.exists()){const myData=snapshot.val();const temporaryArray=Object.keys(myData).map(myId=>{return{...myData[myId],usuarioID:myId};});setUsuarios(temporaryArray);console.log(\"Todos los datos de usuarios: \",temporaryArray);/*          Así lucía antes\r\n\r\n          //Si el snapshot existe, entonces vamos a asignar los datos como tal\r\n\r\n          setUsuarios(Object.values(snapshot.val()));\r\n          console.log(\"Todos los datos de usuarios: \", Object.values(snapshot.val()));\r\n          \r\n          /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n          objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/}else{console.log(\"No hay valores dentro de nuestra tabla de base de datos\");}};fetchAllUsers();},[]);//Función para establecer cambios\nconst handleUserChange=event=>{setUsuarioLogin(prev=>({...prev,[event.target.name]:event.target.value}));};/*Función encargada de presionar botones\r\n    const pressIniciarSesion = async(event) => {\r\n      event.preventDefault(); //Evitamos reinicio de pantalla\r\n\r\n      console.log('Presionamos el botón para encargarnos de iniciar sesión como tal');\r\n      try {\r\n        if (!usuarioLogin.correo || !usuarioLogin.password){\r\n          alert('Por favor, completa todos los campos.');\r\n          return;\r\n        }\r\n\r\n        const usuarioExists = usuarios.some((usuario) => \r\n          usuario.correo === usuarioLogin.correo && usuario.password === usuarioLogin.password\r\n        )\r\n\r\n        if (!usuarioExists){\r\n          alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o correo\");\r\n          return;\r\n        }\r\n\r\n        navigate(\"/plataforma\");\r\n      }catch (error) {\r\n        console.error(\"Ha aparecido un error: \", error);\r\n      }\r\n    }*/const handleIniciarSesion=async event=>{event.preventDefault();//Evitamos reinicio de pantalla\ntry{//Validamos los campos que no estén vacíos\nif(!usuarioLogin.correo||!usuarioLogin.password){alert('Por favor, completa todos los campos.');return;}//Encontramos el usuario que cumpla igualdad de condiciones con correo y contraseña\nconst usuario=usuarios.find(user=>user.correo===usuarioLogin.correo&&user.password===usuarioLogin.password);if(!usuario){alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o usar otro correo\");return;}console.log(\"Valor antes de ser enviado a otra página: \",usuario.usuarioID);//Ahora navegamos a PlataformaGestión, no con el objeto usuario pero con la id para tomar dicho usuario\nnavigate(\"/plataforma/\".concat(usuario.usuarioID));}catch(error){console.error(\"Ha aparecido un error: \",error);}};return/*#__PURE__*/_jsx(\"section\",{className:\"App-content\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"Form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"label\",{className:\"Titulo\",children:\"Login\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Correo Electr\\xF3nico\"}),/*#__PURE__*/_jsx(\"input\",{type:'email',placeholder:\"mauHernandez@gmail.com\",name:\"correo\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:'password',placeholder:\"**********\",name:\"password\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(Link,{to:\"/contrase\\xF1a\",children:/*#__PURE__*/_jsx(\"a\",{children:\"\\xBFHas olvidado tu correo electr\\xF3nico?\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleIniciarSesion,children:\"Iniciar Sesi\\xF3n\"})]})]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","app","getDatabase","ref","get","jsx","_jsx","jsxs","_jsxs","IniciarSesion","usuarioLogin","setUsuarioLogin","correo","password","usuarios","setUsuarios","navigate","fetchAllUsers","db","dbRef","snapshot","exists","myData","val","temporaryArray","Object","keys","map","myId","usuarioID","console","log","handleUserChange","event","prev","target","name","value","handleIniciarSesion","preventDefault","alert","usuario","find","user","concat","error","className","children","type","placeholder","onChange","to","onClick"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/IniciarSesion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/IniciarSesion.css'; //Importamos las librerías\r\n\r\n//Cambiar modos de contraseña o correo\r\n\r\n//Importamos url y axios para uso de api  (Base de datos local)\r\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\r\n//import { URL } from './data.js'\r\n\r\n//Importamos el sistema a cambiar de página\r\nimport { useNavigate, Link } from \"react-router-dom\"\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, ref, get } from \"firebase/database\"\r\n\r\nexport default function IniciarSesion() {\r\n    //Muy basado en Registrar.jsx, checar la documentación de éste\r\n    const [usuarioLogin, setUsuarioLogin] = useState({\r\n      correo: \"\",\r\n      password: \"\"\r\n    })\r\n    \r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n      const fetchAllUsers = async() => {\r\n        //Tomamos la base de datos a la cual nos conectamos\r\n        const db = getDatabase(app);\r\n\r\n        //Referenciamos la base de datos, la ubicación donde guardamos los usuarios\r\n        const dbRef = ref(db, \"usuarios\");\r\n\r\n        //Buscamos información dentro de los casos, mediante un snapshot\r\n        const snapshot = await get(dbRef);\r\n\r\n        //Checar documentación de la siguiente modificación de datas en CambiarContraseña.jsx\r\n\r\n        if (snapshot.exists()){\r\n          const myData = snapshot.val();\r\n          const temporaryArray = Object.keys(myData).map( myId => {\r\n            return {\r\n              ...myData[myId],\r\n              usuarioID: myId\r\n            }\r\n          });\r\n\r\n          setUsuarios(temporaryArray);\r\n          console.log(\"Todos los datos de usuarios: \", temporaryArray);\r\n\r\n          /*          Así lucía antes\r\n\r\n          //Si el snapshot existe, entonces vamos a asignar los datos como tal\r\n\r\n          setUsuarios(Object.values(snapshot.val()));\r\n          console.log(\"Todos los datos de usuarios: \", Object.values(snapshot.val()));\r\n          \r\n          /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n          objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/\r\n        } else{\r\n            console.log(\"No hay valores dentro de nuestra tabla de base de datos\");\r\n        }\r\n      };\r\n      fetchAllUsers();\r\n    }, []);\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n      setUsuarioLogin(\r\n        prev => ({...prev, [event.target.name]: event.target.value})\r\n      );\r\n    }\r\n    \r\n    /*Función encargada de presionar botones\r\n    const pressIniciarSesion = async(event) => {\r\n      event.preventDefault(); //Evitamos reinicio de pantalla\r\n\r\n      console.log('Presionamos el botón para encargarnos de iniciar sesión como tal');\r\n      try {\r\n        if (!usuarioLogin.correo || !usuarioLogin.password){\r\n          alert('Por favor, completa todos los campos.');\r\n          return;\r\n        }\r\n\r\n        const usuarioExists = usuarios.some((usuario) => \r\n          usuario.correo === usuarioLogin.correo && usuario.password === usuarioLogin.password\r\n        )\r\n\r\n        if (!usuarioExists){\r\n          alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o correo\");\r\n          return;\r\n        }\r\n\r\n        navigate(\"/plataforma\");\r\n      }catch (error) {\r\n        console.error(\"Ha aparecido un error: \", error);\r\n      }\r\n    }*/\r\n\r\n    const handleIniciarSesion = async(event) => {\r\n      event.preventDefault(); //Evitamos reinicio de pantalla\r\n      try{\r\n        //Validamos los campos que no estén vacíos\r\n        if (!usuarioLogin.correo || !usuarioLogin.password){\r\n          alert('Por favor, completa todos los campos.');\r\n          return;\r\n        }\r\n\r\n        //Encontramos el usuario que cumpla igualdad de condiciones con correo y contraseña\r\n        const usuario = usuarios.find((user) => \r\n          user.correo === usuarioLogin.correo && user.password === usuarioLogin.password\r\n        )\r\n\r\n        if (!usuario){\r\n          alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o usar otro correo\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"Valor antes de ser enviado a otra página: \", usuario.usuarioID);\r\n\r\n        //Ahora navegamos a PlataformaGestión, no con el objeto usuario pero con la id para tomar dicho usuario\r\n        navigate(`/plataforma/${usuario.usuarioID}`);\r\n      }catch (error) {\r\n        console.error(\"Ha aparecido un error: \", error);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <section className=\"App-content\">\r\n        <form className='Form'>\r\n          <div className='Elemento'>\r\n            <label className='Titulo'>Login</label>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Correo Electrónico</label>\r\n            <input type={'email'} placeholder='mauHernandez@gmail.com' name='correo'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Contraseña</label>\r\n            <input type={'password'} placeholder='**********' name='password'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <Link to=\"/contraseña\">\r\n              <a>¿Has olvidado tu correo electrónico?</a>\r\n            </Link>\r\n            <button onClick={handleIniciarSesion}>Iniciar Sesión</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}