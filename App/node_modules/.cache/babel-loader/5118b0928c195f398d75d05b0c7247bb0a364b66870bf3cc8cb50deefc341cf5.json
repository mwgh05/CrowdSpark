{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\ModificarTareas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n//Parte gráfica\nimport './styles/ModificarTareas.css';\nimport logo from '../images/icon.png';\nimport { Stars } from '@mui/icons-material';\nimport Select from 'react-select';\nimport { useNavigate } from \"react-router-dom\";\n\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\nimport { useParams } from 'react-router-dom';\n\n//Base de datos por firebase\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, get, ref, set, push, update } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModificarTareas() {\n  _s();\n  const {\n    usuarioID,\n    proyectoID\n  } = useParams();\n\n  //Usamos el state para restaurar datos o información\n  const [usuarioActual, setUsuarioActual] = useState(null);\n  const [proyectoActual, setProyectoActual] = useState(null);\n  const [tareas, setTareas] = useState([]);\n  const [usuarios, setUsuarios] = useState([]);\n  const [selectedTarea, setSelectedTarea] = useState(null);\n\n  //Muy basado en Registrar.jsx, checar la documentación de éste\n  const [nuevaTarea, setNuevaTarea] = useState({\n    nombre: \"\",\n    fecha: \"\",\n    encargados: [],\n    descripcion: \"\",\n    idProyecto: \"\",\n    prioridad: 1,\n    estado: \"\",\n    comentarios: [],\n    tareaID: \"\"\n  });\n  const [formDisabled, setFormDisabled] = useState(true);\n  const [comentariosText, setComentariosText] = useState('');\n  const navigate = useNavigate();\n\n  //Sacamos los datos de los usuarios\n  useEffect(() => {\n    const fetchUsuario = async () => {\n      try {\n        //Primero seteamos la base de datos como tal, checando directamente la id\n        const db = getDatabase(app);\n        const dbRef = ref(db, `usuarios/${usuarioID}`);\n\n        //Tomamos la data directamente de dicho usuarioID\n        const snapshot = await get(dbRef);\n\n        //Checamos si existe un snapshot con dicha información específica\n        if (snapshot.exists()) {\n          //Extraemos la información del usuario del snapshot\n          const userData = snapshot.val();\n\n          //Seteamos la data de usuario en nuestro estado global de usuario\n          setUsuarioActual(userData);\n        } else {\n          console.log(\"No se encontró un usuario con dicha información\");\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    const fetchProyecto = async () => {\n      try {\n        const db = getDatabase(app);\n        const dbRef = ref(db, `proyectos/${proyectoID}`);\n        const snapshot = await get(dbRef);\n        if (snapshot.exists()) {\n          const projectData = snapshot.val();\n          setProyectoActual(projectData);\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    fetchUsuario();\n    fetchProyecto();\n  }, [usuarioID, proyectoID]);\n\n  //Array de todos los usuarios como tal dentro del proyecto\n  useEffect(() => {\n    const fetchUserData = async userID => {\n      try {\n        const db = getDatabase(app);\n        const dbRef = ref(db, `usuarios/${userID}`);\n        const snapshot = await get(dbRef);\n        if (snapshot.exists()) {\n          return snapshot.val();\n        } else {\n          console.log(`No se encontró el usuario con la id ${userID}`);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    const fetchTareas = async () => {\n      try {\n        const db = getDatabase(app);\n        const dbRef = ref(db, `tareas`);\n        const snapshot = await get(dbRef);\n        if (snapshot.exists()) {\n          const tareasData = snapshot.val();\n          const tareasList = Object.keys(tareasData).map(myID => {\n            return {\n              ...tareasData[myID],\n              tareaID: myID\n            };\n          });\n\n          /*Tenemos que filtrar las tareas y que estén basadas de acuerdo al proyecto como tal*/\n          const tareasProyecto = tareasList.filter(tarea => tarea.idProyecto === proyectoID);\n\n          //Modificamos el valor de encargados para que tengan los datos del usuario encargado como tal\n          const tareasWithEncargados = await Promise.all(tareasProyecto.map(async tarea => {\n            const encargadosInfo = await Promise.all(tarea.encargados.map(async encargadoID => {\n              return await fetchUserData(encargadoID);\n            }));\n            return {\n              ...tarea,\n              encargadosInfo\n            };\n          }));\n          setTareas(tareasWithEncargados);\n          console.log(\"Lista de tareas del proyecto filtradas: \", tareasWithEncargados);\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario: \", error);\n      }\n    };\n    fetchTareas();\n  }, []);\n  useEffect(() => {\n    //Primero, se depende del proyecto actual para continuar\n    if (!proyectoActual) return;\n    const fetchUsuarios = async () => {\n      try {\n        const db = getDatabase(app);\n        const dbRef = ref(db, `usuarios`);\n        const snapshot = await get(dbRef);\n        if (snapshot.exists()) {\n          const usuariosData = snapshot.val();\n          const usuariosList = Object.keys(usuariosData).map(myID => {\n            return {\n              ...usuariosData[myID],\n              usuarioID: myID\n            };\n          });\n          console.log(\"Lista de usuarios a checar: \", usuariosList);\n          //Filtramos como tal\n          const usuariosProyecto = usuariosList.filter(usuario => proyectoActual.colaboradores.includes(usuario.usuarioID));\n          console.log(\"Lista de usuarios a checar: \", usuariosList);\n          setUsuarios(usuariosProyecto);\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario: \", error);\n      }\n    };\n    fetchUsuarios();\n  }, [proyectoActual]);\n  if (!usuarioID || !proyectoID || !usuarioActual || !proyectoActual || !tareas) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 16\n    }, this);\n  }\n\n  //Función para elegir las tareas como tal\n  const handleTareasChange = event => {\n    //Primero que todo vamos a agarrar el objeto de búsqueda como tal, y setearlo como producto a buscar\n    const tareaID = event.target.value;\n    const selected = tareas.find(tarea => tarea.tareaID === tareaID);\n    setSelectedTarea(selected);\n    console.log(\"Proyecto seleccionado en lista: \", selected);\n\n    //Lleno los valores de la nueva tarea a mostrar, claro, si está seleccionada como tal\n    if (selected) {\n      const opcionEncargados = selected.encargados.map(encargadoID => {\n        const usuario = usuarios.find(usuario => usuario.usuarioID === encargadoID);\n        return usuario;\n      });\n      setNuevaTarea({\n        nombre: selected.nombre,\n        fecha: selected.fecha,\n        encargados: opcionEncargados,\n        descripcion: selected.descripcion,\n        idProyecto: selected.idProyecto,\n        prioridad: selected.prioridad,\n        estado: selected.estado,\n        comentarios: selected.comentarios,\n        tareaID: selected.tareaID\n      });\n      setComentariosText('');\n      if (selected.estado !== 'Incompleta') {\n        //Si el valor no está desactivado como tal, entonces está permitido a modificar,\n        //sino, todo se bloquea\n        setFormDisabled(false);\n      }\n    } else {\n      //Se desactiva sino es seleccionado\n      setFormDisabled(true);\n    }\n  };\n  const handleEncargadosChange = selectedOptions => {\n    const newEncargados = selectedOptions ? selectedOptions.map(option => option.value) : [];\n    console.log(\"Valor de encargados como tal: \", newEncargados);\n    setNuevaTarea(prev => ({\n      ...prev,\n      encargados: newEncargados\n    }));\n  };\n\n  //Función para establecer cambios\n  const handleUserChange = event => {\n    setNuevaTarea(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  //Hacemos como tal un arreglo a la hora de agregar comentarios de las tareas\n  const handleCambioComentarios = event => {\n    setNuevaTarea(prev => ({\n      ...prev,\n      comentarios: [...prev.comentarios, event.target.value]\n    }));\n  };\n  const handleAgregarComentario = event => {\n    event.preventDefault();\n    console.log(`Justo a la hora de introducir el texto a comentarios tenemos que: ${comentariosText} se puede iterar en ${nuevaTarea.comentarios}`);\n    setNuevaTarea(prev => ({\n      ...prev,\n      comentarios: [...prev.comentarios, comentariosText]\n    }));\n    setComentariosText('');\n  };\n  const handleActualizarTareas = async event => {\n    event.preventDefault();\n    if (comentariosText !== '') {\n      handleAgregarComentario(event);\n    }\n    try {\n      const db = getDatabase(app);\n      if (!nuevaTarea.nombre || !nuevaTarea.encargados || !nuevaTarea.fecha || !nuevaTarea.descripcion) {\n        alert('Por favor, completa todos los campos.');\n        return;\n      }\n      console.log(\"Tarea a imprimir como tal: \", nuevaTarea);\n\n      //Extraemos los valores como tal de las id de encargados\n      const encargadosIDs = nuevaTarea.encargados.map(encargado => encargado.usuarioID);\n      console.log(\"Lista de ids de encargados: \", nuevaTarea);\n      const updTareaRef = ref(db, `tareas/${nuevaTarea.tareaID}`);\n      await update(updTareaRef, {\n        nombre: nuevaTarea.nombre,\n        fecha: nuevaTarea.fecha,\n        encargados: encargadosIDs,\n        prioridad: nuevaTarea.prioridad,\n        descripcion: nuevaTarea.descripcion,\n        estado: nuevaTarea.estado,\n        comentarios: nuevaTarea.comentarios\n      });\n      alert(\"Se han actualizado correctamente los datos de la tarea\");\n      navigate(`/Tareas/${usuarioID}/${proyectoID}`);\n    } catch (error) {\n      console.error(\"Ha aparecido un error: \", error);\n      alert(\"Error al guardar los datos\");\n    }\n  };\n  const isLider = proyectoActual.lider === usuarioID;\n  console.log(\"Proyecto actual a mostrar: \", proyectoActual);\n  console.log(\"Usuarios totales a mostrar: \", usuarios);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Plataforma\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"Titulo\",\n          children: \"Modificar Tareas en el Proyecto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleTareasChange,\n          className: \"buscarTareas\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione una Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), tareas.map(tarea => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tarea.tareaID,\n            children: tarea.nombre\n          }, tarea.tareaID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'text',\n          placeholder: \"Crear un Login\",\n          name: \"nombre\",\n          value: nuevaTarea.nombre,\n          onChange: handleUserChange,\n          disabled: formDisabled === isLider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha y hora de entrega\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'datetime-local',\n          placeholder: \"2018-06-12T19:30\",\n          name: \"fecha\",\n          value: nuevaTarea.fecha,\n          onChange: handleUserChange,\n          disabled: formDisabled === isLider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Encargados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: usuarios.map(encargado => ({\n            value: encargado.usuarioID,\n            label: encargado.nombre\n          })),\n          isMulti: true,\n          onChange: handleEncargadosChange,\n          name: \"encargados\",\n          value: nuevaTarea.encargados ? nuevaTarea.encargados.map(encargado => ({\n            value: encargado.usuarioID,\n            label: encargado.nombre\n          })) : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nivel de Prioridad de la Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'range',\n          min: \"1\",\n          max: \"10\",\n          name: \"prioridad\",\n          value: nuevaTarea.prioridad,\n          onChange: handleUserChange,\n          disabled: formDisabled === isLider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: nuevaTarea.prioridad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descripci\\xF3n completa de la Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"descripci\\xF3n\",\n          placeholder: \"Los encargados como tal deben de empezar la funci\\xF3n de...\",\n          value: nuevaTarea.descripcion,\n          onChange: handleUserChange,\n          disabled: formDisabled === isLider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'radio',\n            id: \"En Proceso\",\n            name: \"estado\",\n            value: \"En Proceso\",\n            checked: nuevaTarea.estado === \"En Proceso\",\n            onChange: handleUserChange,\n            disabled: formDisabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"En Proceso\",\n            children: \"En Proceso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'radio',\n            id: \"Completado\",\n            name: \"estado\",\n            value: \"Completado\",\n            checked: nuevaTarea.estado === \"Completado\",\n            onChange: handleUserChange,\n            disabled: formDisabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Completado\",\n            children: \"Completado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'radio',\n            id: \"Incompleta\",\n            name: \"estado\",\n            value: \"Incompleta\",\n            checked: nuevaTarea.estado === \"Incompleta\",\n            onChange: handleUserChange,\n            disabled: !formDisabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Incompleta\",\n            children: \"Incompleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Agregar Comentarios de la Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Durante el desarrollo de la tarea, se pudo experimentar ciertas problem\\xE1ticas en...\",\n          value: comentariosText,\n          disabled: formDisabled,\n          onChange: event => setComentariosText(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"AgregarComentarioButton\",\n          onClick: handleAgregarComentario,\n          children: \" Agregar Comentario \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleActualizarTareas,\n          children: \" Modificar \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this);\n}\n_s(ModificarTareas, \"SB5CrY53JsUen2bn5OJd/egglfs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ModificarTareas;\nvar _c;\n$RefreshReg$(_c, \"ModificarTareas\");","map":{"version":3,"names":["React","useState","useEffect","logo","Stars","Select","useNavigate","useParams","app","getDatabase","get","ref","set","push","update","jsxDEV","_jsxDEV","ModificarTareas","_s","usuarioID","proyectoID","usuarioActual","setUsuarioActual","proyectoActual","setProyectoActual","tareas","setTareas","usuarios","setUsuarios","selectedTarea","setSelectedTarea","nuevaTarea","setNuevaTarea","nombre","fecha","encargados","descripcion","idProyecto","prioridad","estado","comentarios","tareaID","formDisabled","setFormDisabled","comentariosText","setComentariosText","navigate","fetchUsuario","db","dbRef","snapshot","exists","userData","val","console","log","error","fetchProyecto","projectData","fetchUserData","userID","fetchTareas","tareasData","tareasList","Object","keys","map","myID","tareasProyecto","filter","tarea","tareasWithEncargados","Promise","all","encargadosInfo","encargadoID","fetchUsuarios","usuariosData","usuariosList","usuariosProyecto","usuario","colaboradores","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","handleTareasChange","event","target","value","selected","find","opcionEncargados","handleEncargadosChange","selectedOptions","newEncargados","option","prev","handleUserChange","name","handleCambioComentarios","handleAgregarComentario","preventDefault","handleActualizarTareas","alert","encargadosIDs","encargado","updTareaRef","isLider","lider","className","onChange","type","placeholder","disabled","options","label","isMulti","min","max","id","checked","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/ModificarTareas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n//Parte gráfica\r\nimport './styles/ModificarTareas.css';\r\nimport logo from '../images/icon.png';\r\nimport { Stars } from '@mui/icons-material';\r\nimport Select from 'react-select'\r\n\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref, set, push, update } from 'firebase/database';\r\n\r\nexport default function ModificarTareas() {\r\n    const { usuarioID, proyectoID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n    const [proyectoActual, setProyectoActual] = useState(null);\r\n\r\n    const [tareas, setTareas] = useState([]);\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [selectedTarea, setSelectedTarea] = useState(null);\r\n\r\n\r\n    //Muy basado en Registrar.jsx, checar la documentación de éste\r\n    const [nuevaTarea, setNuevaTarea] = useState({\r\n        nombre:\"\",\r\n        fecha:\"\",\r\n        encargados: [],\r\n        descripcion: \"\",\r\n        idProyecto: \"\",\r\n        prioridad: 1,\r\n        estado: \"\",\r\n        comentarios: [],\r\n        tareaID: \"\"\r\n    })\r\n\r\n    const [formDisabled, setFormDisabled] = useState(true);\r\n\r\n    const [comentariosText, setComentariosText] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n        const fetchUsuario = async() => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                }else{\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        const fetchProyecto = async() => {\r\n            try{\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `proyectos/${proyectoID}`);\r\n                const snapshot = await get(dbRef);\r\n\r\n                if (snapshot.exists()){\r\n                    const projectData = snapshot.val();\r\n                    setProyectoActual(projectData);\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n        fetchProyecto();\r\n    }, [usuarioID, proyectoID]);\r\n\r\n    //Array de todos los usuarios como tal dentro del proyecto\r\n    useEffect(() => {\r\n        const fetchUserData = async (userID) => {\r\n            try {\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${userID}`);\r\n                const snapshot = await get(dbRef);\r\n    \r\n                if (snapshot.exists()){\r\n                    return snapshot.val()\r\n                } else {\r\n                    console.log(`No se encontró el usuario con la id ${userID}`);\r\n                    return null;\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        }\r\n\r\n        const fetchTareas = async() => {\r\n            try{\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `tareas`);\r\n                const snapshot = await get(dbRef);\r\n\r\n                if (snapshot.exists()){\r\n                    const tareasData = snapshot.val();\r\n                    const tareasList = Object.keys(tareasData).map(myID => {\r\n                        return {\r\n                            ...tareasData[myID],\r\n                            tareaID: myID\r\n                        }\r\n                    })\r\n\r\n                    /*Tenemos que filtrar las tareas y que estén basadas de acuerdo al proyecto como tal*/\r\n                    const tareasProyecto = tareasList.filter(tarea => tarea.idProyecto === proyectoID);\r\n\r\n                    //Modificamos el valor de encargados para que tengan los datos del usuario encargado como tal\r\n                    const tareasWithEncargados = await Promise.all(\r\n                        tareasProyecto.map(async tarea => {\r\n                            const encargadosInfo = await Promise.all(\r\n                                tarea.encargados.map(async encargadoID => {\r\n                                    return await fetchUserData(encargadoID);\r\n                                })\r\n                            )\r\n                            return { ...tarea, encargadosInfo};\r\n                        })\r\n                    )\r\n\r\n                    setTareas(tareasWithEncargados);\r\n                    console.log(\"Lista de tareas del proyecto filtradas: \", tareasWithEncargados);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error consiguiendo la información del usuario: \", error);\r\n            }\r\n        }\r\n        fetchTareas();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //Primero, se depende del proyecto actual para continuar\r\n        if (!proyectoActual) return; \r\n        const fetchUsuarios = async() => {\r\n            try{\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios`);\r\n                const snapshot = await get(dbRef);\r\n\r\n                if (snapshot.exists()){\r\n                    const usuariosData = snapshot.val();\r\n                    const usuariosList = Object.keys(usuariosData).map(myID => {\r\n                        return {\r\n                            ...usuariosData[myID],\r\n                            usuarioID: myID\r\n                        }\r\n                    });\r\n\r\n                    console.log(\"Lista de usuarios a checar: \", usuariosList);\r\n                    //Filtramos como tal\r\n                    const usuariosProyecto = usuariosList.filter(usuario => \r\n                        proyectoActual.colaboradores.includes(usuario.usuarioID))\r\n\r\n                    console.log(\"Lista de usuarios a checar: \", usuariosList);\r\n\r\n                    setUsuarios(usuariosProyecto);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error consiguiendo la información del usuario: \", error);\r\n            }\r\n        };\r\n\r\n        fetchUsuarios();\r\n    }, [proyectoActual])\r\n\r\n    if (!usuarioID || !proyectoID || !usuarioActual || !proyectoActual || !tareas){\r\n        return <div>Cargando</div>\r\n    }\r\n\r\n    //Función para elegir las tareas como tal\r\n    const handleTareasChange = (event) => {\r\n        //Primero que todo vamos a agarrar el objeto de búsqueda como tal, y setearlo como producto a buscar\r\n        const tareaID = event.target.value;\r\n        const selected = tareas.find(tarea => tarea.tareaID === tareaID);\r\n        setSelectedTarea(selected);\r\n\r\n        console.log(\"Proyecto seleccionado en lista: \", selected);\r\n\r\n        //Lleno los valores de la nueva tarea a mostrar, claro, si está seleccionada como tal\r\n        if (selected){\r\n\r\n            const opcionEncargados = selected.encargados.map(encargadoID => {\r\n                const usuario = usuarios.find(usuario => usuario.usuarioID === encargadoID);\r\n                return usuario;\r\n            });\r\n\r\n            setNuevaTarea({\r\n                nombre: selected.nombre,\r\n                fecha: selected.fecha,\r\n                encargados: opcionEncargados,\r\n                descripcion: selected.descripcion,\r\n                idProyecto: selected.idProyecto,\r\n                prioridad: selected.prioridad,\r\n                estado: selected.estado,\r\n                comentarios: selected.comentarios,\r\n                tareaID: selected.tareaID\r\n            })\r\n\r\n            setComentariosText('');\r\n\r\n            if (selected.estado !== 'Incompleta'){\r\n                //Si el valor no está desactivado como tal, entonces está permitido a modificar,\r\n                //sino, todo se bloquea\r\n                setFormDisabled(false);\r\n            }\r\n        } else {\r\n            //Se desactiva sino es seleccionado\r\n            setFormDisabled(true);\r\n        }\r\n    };\r\n\r\n    const handleEncargadosChange = (selectedOptions) => {\r\n        const newEncargados = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n        console.log(\"Valor de encargados como tal: \", newEncargados);    \r\n        setNuevaTarea(prev => \r\n            ({...prev,\r\n                encargados: newEncargados}));\r\n    }\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n        setNuevaTarea(\r\n            prev => ({...prev, [event.target.name]: event.target.value})\r\n        );\r\n    }\r\n\r\n    //Hacemos como tal un arreglo a la hora de agregar comentarios de las tareas\r\n    const handleCambioComentarios = (event) => {\r\n        setNuevaTarea(prev => ({\r\n            ...prev,\r\n            comentarios: [...prev.comentarios, event.target.value]\r\n        }));\r\n    }\r\n\r\n    const handleAgregarComentario = (event) => {\r\n        event.preventDefault();\r\n        \r\n        console.log(`Justo a la hora de introducir el texto a comentarios tenemos que: ${comentariosText} se puede iterar en ${nuevaTarea.comentarios}`)\r\n        setNuevaTarea(prev => ({\r\n            ...prev,\r\n            comentarios: [...prev.comentarios, comentariosText]\r\n        }));\r\n        setComentariosText('');\r\n    }\r\n\r\n    const handleActualizarTareas = async(event) => {\r\n        event.preventDefault();\r\n        if (comentariosText !== ''){\r\n            handleAgregarComentario(event);\r\n        }\r\n\r\n        try{\r\n            const db = getDatabase(app);\r\n\r\n            if (!nuevaTarea.nombre || \r\n                !nuevaTarea.encargados ||\r\n                !nuevaTarea.fecha ||\r\n                !nuevaTarea.descripcion) {\r\n                alert('Por favor, completa todos los campos.');\r\n                return;\r\n            }\r\n\r\n            console.log(\"Tarea a imprimir como tal: \", nuevaTarea);\r\n\r\n            //Extraemos los valores como tal de las id de encargados\r\n            const encargadosIDs = nuevaTarea.encargados.map(encargado => encargado.usuarioID);\r\n            console.log(\"Lista de ids de encargados: \", nuevaTarea);\r\n\r\n            const updTareaRef = ref(db, `tareas/${nuevaTarea.tareaID}`);\r\n            await update(updTareaRef, {\r\n                nombre: nuevaTarea.nombre,\r\n                fecha: nuevaTarea.fecha,\r\n                encargados: encargadosIDs,\r\n                prioridad: nuevaTarea.prioridad,\r\n                descripcion: nuevaTarea.descripcion,\r\n                estado: nuevaTarea.estado,\r\n                comentarios: nuevaTarea.comentarios\r\n            })\r\n            alert(\"Se han actualizado correctamente los datos de la tarea\");\r\n            navigate(`/Tareas/${usuarioID}/${proyectoID}`);\r\n        } catch (error) {\r\n            console.error(\"Ha aparecido un error: \", error);\r\n            alert(\"Error al guardar los datos\");\r\n        }\r\n    }\r\n\r\n    const isLider = proyectoActual.lider === usuarioID;\r\n\r\n    console.log(\"Proyecto actual a mostrar: \", proyectoActual)\r\n    console.log(\"Usuarios totales a mostrar: \", usuarios)\r\n\r\n    return (\r\n        <section className=\"Plataforma\">\r\n            <form className='Form'>\r\n                <div className='Elemento'>\r\n                    <label className='Titulo'>Modificar Tareas en el Proyecto</label>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <select onChange={handleTareasChange} className=\"buscarTareas\">\r\n                        <option value=\"\">Seleccione una Tarea</option>\r\n                        {tareas.map(tarea => (\r\n                            <option key={tarea.tareaID} value={tarea.tareaID}>{tarea.nombre}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Nombre</label>\r\n                    <input type={'text'} placeholder='Crear un Login' name='nombre' value={nuevaTarea.nombre}\r\n                    onChange={handleUserChange} disabled={(formDisabled === isLider)}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Fecha y hora de entrega</label>\r\n                    <input type={'datetime-local'} placeholder='2018-06-12T19:30' name='fecha'\r\n                    value={nuevaTarea.fecha} onChange={handleUserChange} disabled={(formDisabled === isLider)}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Encargados</label>\r\n                    <Select\r\n                        options={usuarios.map(encargado => ({\r\n                            value: encargado.usuarioID,\r\n                            label: encargado.nombre\r\n                        }))}\r\n                        isMulti\r\n                        onChange={handleEncargadosChange}\r\n                        name='encargados'\r\n                        value={nuevaTarea.encargados ? nuevaTarea.encargados.map(encargado => ({\r\n                            value: encargado.usuarioID,\r\n                            label: encargado.nombre\r\n                        })) : []}\r\n                    />\r\n                </div>\r\n                <div className='Elemento'>\r\n                    <label>Nivel de Prioridad de la Tarea</label>\r\n                    <input type={'range'} min=\"1\" max=\"10\" name='prioridad' value={nuevaTarea.prioridad}\r\n                    onChange={handleUserChange} disabled={(formDisabled === isLider)}/>\r\n                    <span>{nuevaTarea.prioridad}</span>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Descripción completa de la Tarea</label>\r\n                    <textarea name='descripción' \r\n                    placeholder='Los encargados como tal deben de empezar la función de...'\r\n                    value={nuevaTarea.descripcion} onChange={handleUserChange}\r\n                    disabled={(formDisabled === isLider)}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Estado</label>\r\n                    <div>\r\n                        <input type={'radio'} id=\"En Proceso\" name='estado' value=\"En Proceso\"\r\n                        checked={nuevaTarea.estado === \"En Proceso\"} onChange={handleUserChange}\r\n                        disabled={formDisabled}></input>\r\n                        <label htmlFor='En Proceso'>En Proceso</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type={'radio'} id=\"Completado\" name='estado' value=\"Completado\"\r\n                        checked={nuevaTarea.estado === \"Completado\"} onChange={handleUserChange}\r\n                        disabled={formDisabled}></input>\r\n                        <label htmlFor='Completado'>Completado</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type={'radio'} id=\"Incompleta\" name='estado' value=\"Incompleta\"\r\n                        checked={nuevaTarea.estado === \"Incompleta\"} onChange={handleUserChange}\r\n                        disabled={!formDisabled}></input>\r\n                        <label htmlFor='Incompleta'>Incompleta</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Agregar Comentarios de la Tarea</label>\r\n                    <textarea\r\n                    placeholder='Durante el desarrollo de la tarea, se pudo experimentar ciertas problemáticas en...'\r\n                    value={comentariosText}\r\n                    disabled={(formDisabled)}\r\n                    onChange={(event) => setComentariosText(event.target.value)}\r\n                    />\r\n                    <button className='AgregarComentarioButton'\r\n                    onClick={handleAgregarComentario}> Agregar Comentario </button>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <button onClick={handleActualizarTareas}> Modificar </button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}