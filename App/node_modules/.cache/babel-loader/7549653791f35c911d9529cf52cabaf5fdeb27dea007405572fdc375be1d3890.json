{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles/PlataformaGestion.css';import{useNavigate}from\"react-router-dom\";/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/import{useParams}from'react-router-dom';//Base de datos por firebase\nimport app from\"../firebaseConfig.js\";import{getDatabase,get,ref,set,push}from'firebase/database';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CrearProyecto(){const{usuarioID}=useParams();//Usamos el state para restaurar datos o información\nconst[usuarioActual,setUsuarioActual]=useState(null);//Muy basado en Registrar.jsx, checar la documentación de éste\nconst[nuevoProyecto,setNuevoProyecto]=useState({nombre:\"\",fecha:\"\",tareas:[],colaboradores:[usuarioID],lider:usuarioID});const navigate=useNavigate();console.log(\"Parametro recibido: \",usuarioID);//Sacamos los datos de los usuarios\nuseEffect(()=>{const fetchUsuario=async()=>{try{//Primero seteamos la base de datos como tal, checando directamente la id\nconst db=getDatabase(app);const dbRef=ref(db,\"usuarios/\".concat(usuarioID));//Tomamos la data directamente de dicho usuarioID\nconst snapshot=await get(dbRef);//Checamos si existe un snapshot con dicha información específica\nif(snapshot.exists()){//Extraemos la información del usuario del snapshot\nconst userData=snapshot.val();//Seteamos la data de usuario en nuestro estado global de usuario\nsetUsuarioActual(userData);}else{console.log(\"No se encontró un usuario con dicha información\");}}catch(error){console.error(\"Error consiguiendo la información del usuario\");}};fetchUsuario();},[usuarioID]);//Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\n//Función para establecer cambios\nconst handleUserChange=event=>{setNuevoProyecto(prev=>({...prev,[event.target.name]:event.target.value}));};const handleCrearProyecto=async event=>{event.preventDefault();try{const db=getDatabase();if(!nuevoProyecto.nombre||!nuevoProyecto.fecha){alert('Por favor, completa todos los campos.');return;}//Creamos una carpeta o archivo basado en el string de posición\nconst newProyectoRef=push(ref(db,\"proyectos\"));await set(newProyectoRef,{nombre:nuevoProyecto.nombre,fecha:nuevoProyecto.fecha,tareas:nuevoProyecto.tareas,colaboradores:nuevoProyecto.colaboradores,lider:nuevoProyecto.lider,codigoGrupo:newProyectoRef.key});//Extraemos la ID de la recién usada fila creada de proyecto\nconst newProyectoID=newProyectoRef.key;alert(\"La data ha sido guardada de forma exitosa\");const snapshot=await get(ref(db,\"proyectos/\".concat(newProyectoID)));if(snapshot.exists){console.log(\"ID: \",newProyectoID);console.log(\"Proyecto: \",snapshot.val());}navigate(\"/Proyectos/\".concat(usuarioID));}catch(error){console.error(\"Ha aparecido un error: \",error);alert(\"Error al guardar los datos\");}};return/*#__PURE__*/_jsx(\"section\",{className:\"App-content\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"Form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"label\",{className:\"Titulo\",children:\"Login\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:'text',placeholder:\"Aplicacion\",name:\"nombre\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Fecha y hora de entrega\"}),/*#__PURE__*/_jsx(\"input\",{type:'datetime-local',placeholder:\"2018-06-12T19:30\",name:\"fecha\",onChange:handleUserChange})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleCrearProyecto,children:\"Crear\"})})]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","app","getDatabase","get","ref","set","push","jsx","_jsx","jsxs","_jsxs","CrearProyecto","usuarioID","usuarioActual","setUsuarioActual","nuevoProyecto","setNuevoProyecto","nombre","fecha","tareas","colaboradores","lider","navigate","console","log","fetchUsuario","db","dbRef","concat","snapshot","exists","userData","val","error","handleUserChange","event","prev","target","name","value","handleCrearProyecto","preventDefault","alert","newProyectoRef","codigoGrupo","key","newProyectoID","className","children","type","placeholder","onChange","onClick"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/CrearProyecto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/PlataformaGestion.css';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref, set, push } from 'firebase/database';\r\n\r\nexport default function CrearProyecto() {\r\n    const { usuarioID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n\r\n    //Muy basado en Registrar.jsx, checar la documentación de éste\r\n    const [nuevoProyecto, setNuevoProyecto] = useState({\r\n      nombre:\"\",\r\n      fecha:\"\",\r\n      tareas:[],\r\n      colaboradores:[usuarioID],\r\n      lider:usuarioID\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    \r\n\r\n    console.log(\"Parametro recibido: \", usuarioID);\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n        const fetchUsuario = async() => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                }else{\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n    }, [usuarioID]); //Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\r\n\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n      setNuevoProyecto(\r\n        prev => ({...prev, [event.target.name]: event.target.value})\r\n      );\r\n    }\r\n\r\n\r\n    const handleCrearProyecto = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            const db = getDatabase();\r\n\r\n            if (!nuevoProyecto.nombre || \r\n                !nuevoProyecto.fecha) {\r\n                alert('Por favor, completa todos los campos.');\r\n                return;\r\n            }\r\n\r\n            //Creamos una carpeta o archivo basado en el string de posición\r\n            const newProyectoRef = push(ref(db, \"proyectos\"));\r\n            await set(newProyectoRef, {\r\n                nombre: nuevoProyecto.nombre,\r\n                fecha: nuevoProyecto.fecha,\r\n                tareas: nuevoProyecto.tareas,\r\n                colaboradores: nuevoProyecto.colaboradores,\r\n                lider: nuevoProyecto.lider,\r\n                codigoGrupo: newProyectoRef.key\r\n            });\r\n            //Extraemos la ID de la recién usada fila creada de proyecto\r\n            const newProyectoID = newProyectoRef.key;\r\n\r\n            alert(\"La data ha sido guardada de forma exitosa\");\r\n\r\n            const snapshot = await get(ref(db, `proyectos/${newProyectoID}`));\r\n            if(snapshot.exists){\r\n                console.log(\"ID: \", newProyectoID);\r\n                console.log(\"Proyecto: \", snapshot.val());\r\n            }\r\n            \r\n            navigate(`/Proyectos/${usuarioID}`);\r\n        } catch (error) {\r\n            console.error(\"Ha aparecido un error: \", error);\r\n            alert(\"Error al guardar los datos\");\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n      <section className=\"App-content\">\r\n        <form className='Form'>\r\n          <div className='Elemento'>\r\n            <label className='Titulo'>Login</label>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Nombre</label>\r\n            <input type={'text'} placeholder='Aplicacion' name='nombre'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Fecha y hora de entrega</label>\r\n            <input type={'datetime-local'} placeholder='2018-06-12T19:30' name='fecha'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n\r\n          <div className='Elemento'>\r\n            <button onClick={handleCrearProyecto}>Crear</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}