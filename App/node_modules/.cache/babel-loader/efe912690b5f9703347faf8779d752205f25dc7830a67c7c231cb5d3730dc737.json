{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\Foro.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/Foro.css';\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, ref, push, update, onValue, get } from \"firebase/database\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Foro() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [mensaje, setMensaje] = useState([]);\n  const {\n    usuarioID,\n    proyectoID\n  } = useParams();\n  const navigate = useNavigate();\n  async function fetchData() {\n    const db = getDatabase(app);\n    const dbRef = ref(db, `foros/${proyectoID}/mensajes`);\n    const usuariosRef = ref(db, `usuarios`);\n    const userSnapshot = await get(usuariosRef);\n    const userNames = userSnapshot.val() || {};\n    const userIdToName = {};\n    Object.keys(userNames).forEach(userId => {\n      userIdToName[userId] = userNames[userId].nombre; // Assuming 'name' is the field for the user's name\n    });\n    const unsubscribe = onValue(dbRef, snapshot => {\n      if (snapshot.exists()) {\n        const fetchMessages = snapshot.val() || [];\n        const messagesWithNames = Object.keys(fetchMessages).map(msgId => ({\n          ...fetchMessages[msgId],\n          usuario: userIdToName[fetchMessages[msgId].usuario] || fetchMessages[msgId].usuario // Fallback to ID if name not found\n        }));\n        setMensaje(messagesWithNames);\n      } else {\n        console.error(\"No values.\");\n      }\n    });\n    return unsubscribe;\n  }\n  const publicarMensaje = async () => {\n    if (!inputValue) return;\n    const db = getDatabase(app);\n    const dbRef = ref(db, `foros/${proyectoID}/mensajes`);\n    const newMessage = push(dbRef);\n    await update(newMessage, {\n      usuario: usuarioID,\n      contenido: inputValue\n    });\n    setInputValue('');\n  };\n  useEffect(() => {\n    const unsubscribe = fetchData();\n    //return () => unsubscribe();\n  }, [proyectoID]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBoxField\",\n        children: Object.keys(mensaje).map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [mensaje[msg].usuario, \" : \", mensaje[msg].contenido]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputTextField\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"textbox\",\n        name: \"message\",\n        placeholder: \"Mensaje\",\n        required: true,\n        value: inputValue,\n        onChange: event => setInputValue(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonn\",\n        type: \"submit\",\n        onClick: publicarMensaje,\n        children: \"\\u2708\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Foro, \"U8g88v32kzGDHZOzBqWCQmyv3nU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Foro;\nvar _c;\n$RefreshReg$(_c, \"Foro\");","map":{"version":3,"names":["React","useEffect","useState","app","getDatabase","ref","push","update","onValue","get","useNavigate","useParams","jsxDEV","_jsxDEV","Foro","_s","inputValue","setInputValue","mensaje","setMensaje","usuarioID","proyectoID","navigate","fetchData","db","dbRef","usuariosRef","userSnapshot","userNames","val","userIdToName","Object","keys","forEach","userId","nombre","unsubscribe","snapshot","exists","fetchMessages","messagesWithNames","map","msgId","usuario","console","error","publicarMensaje","newMessage","contenido","className","children","msg","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/Foro.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './styles/Foro.css'\r\n\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, ref, push, update, onValue, get } from \"firebase/database\"\r\n\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function Foro() {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [mensaje, setMensaje] = useState([]);\r\n    const { usuarioID, proyectoID } = useParams();\r\n    const navigate = useNavigate();\r\n  \r\n    async function fetchData() {\r\n        const db = getDatabase(app);\r\n        const dbRef = ref(db, `foros/${proyectoID}/mensajes`);  \r\n\r\n        const usuariosRef = ref(db, `usuarios`);\r\n        const userSnapshot = await get(usuariosRef);\r\n        const userNames = userSnapshot.val() || {};\r\n\r\n        const userIdToName = {};\r\n        Object.keys(userNames).forEach(userId => {\r\n        userIdToName[userId] = userNames[userId].nombre; // Assuming 'name' is the field for the user's name\r\n        });\r\n\r\n        const unsubscribe = onValue(dbRef, (snapshot) => {\r\n            if (snapshot.exists()) {\r\n                const fetchMessages = snapshot.val() || [];\r\n                const messagesWithNames = Object.keys(fetchMessages).map(msgId => ({\r\n                    ...fetchMessages[msgId],\r\n                    usuario: userIdToName[fetchMessages[msgId].usuario] || fetchMessages[msgId].usuario // Fallback to ID if name not found\r\n                }));\r\n                setMensaje(messagesWithNames);\r\n            } else {\r\n                console.error(\"No values.\")\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    }\r\n\r\n    const publicarMensaje = async () => {\r\n        if (!inputValue) return;\r\n\r\n        const db = getDatabase(app);\r\n        const dbRef = ref(db, `foros/${proyectoID}/mensajes`);  \r\n        const newMessage = push(dbRef);\r\n\r\n        await update(newMessage, {\r\n            usuario: usuarioID,\r\n            contenido: inputValue\r\n        })\r\n\r\n        setInputValue('');\r\n    };\r\n   \r\n    useEffect(() => {\r\n        const unsubscribe = fetchData();\r\n        //return () => unsubscribe();\r\n    }, [proyectoID]);\r\n\r\n    return (\r\n        <section className='App-content'>\r\n            <div className='chatBox'>\r\n                <div className='chatBoxField'>\r\n                    {Object.keys(mensaje).map((msg) => (\r\n                        <div>\r\n                            <p>{mensaje[msg].usuario} : {mensaje[msg].contenido}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className='inputTextField'>\r\n                <input type=\"text\" \r\n                className='textbox' \r\n                name=\"message\" \r\n                placeholder='Mensaje' \r\n                required={true}\r\n                value={inputValue}\r\n                onChange={(event) => setInputValue(event.target.value)}/>\r\n                <button className='buttonn' type=\"submit\" onClick={publicarMensaje}>âœˆ</button>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}