{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\EnlistarTareas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n//Parte gráfica\nimport './styles/EnlistarTareas.css';\nimport logo from '../images/icon.png';\nimport { Stars } from '@mui/icons-material';\nimport Select from 'react-select';\nimport { useNavigate } from \"react-router-dom\";\n\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\nimport { useParams } from 'react-router-dom';\n\n//Base de datos por firebase\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, get, ref, set, push } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EnlistarTareas() {\n  _s();\n  const {\n    usuarioID,\n    proyectoID\n  } = useParams();\n\n  //Usamos el state para restaurar datos o información\n  const [usuarioActual, setUsuarioActual] = useState(null);\n  const [proyectoActual, setProyectoActual] = useState(null);\n  const [tareas, setTareas] = useState([]);\n  const navigate = useNavigate();\n\n  //Sacamos los datos de los usuarios\n  useEffect(() => {\n    const fetchUsuario = async () => {\n      try {\n        //Primero seteamos la base de datos como tal, checando directamente la id\n        const db = getDatabase(app);\n        const dbRef = ref(db, `usuarios/${usuarioID}`);\n\n        //Tomamos la data directamente de dicho usuarioID\n        const snapshot = await get(dbRef);\n\n        //Checamos si existe un snapshot con dicha información específica\n        if (snapshot.exists()) {\n          //Extraemos la información del usuario del snapshot\n          const userData = snapshot.val();\n\n          //Seteamos la data de usuario en nuestro estado global de usuario\n          setUsuarioActual(userData);\n          console.log(\"Dentro de crearTarea, si agarramos usuario\");\n        } else {\n          console.log(\"No se encontró un usuario con dicha información\");\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    const fetchProyecto = async () => {\n      try {\n        const db = getDatabase(app);\n        const dbRef = ref(db, `proyectos/${proyectoID}`);\n        const snapshot = await get(dbRef);\n        if (snapshot.exists()) {\n          const projectData = snapshot.val();\n          setProyectoActual(projectData);\n          console.log(\"Dentro de crearTarea, si agarramos proyecto\");\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    fetchUsuario();\n    fetchProyecto();\n  }, [usuarioID, proyectoID]);\n\n  //Array de todos los usuarios como tal dentro del proyecto\n  useEffect(() => {\n    const fetchTareas = async () => {\n      const db = getDatabase(app);\n      const dbRef = ref(db, `tareas`);\n      const snapshot = await get(dbRef);\n      if (snapshot.exists()) {\n        const tareasData = snapshot.val();\n        const tareasList = Object.keys(tareasData).map(myID => {\n          return {\n            ...tareasData[myID],\n            tareaID: myID\n          };\n        });\n\n        /*Tenemos que filtrar las tareas y que estén basadas de acuerdo al proyecto como tal*/\n        console.log(\"Lista de tareas sin filtrado: \", tareasList);\n        const tareasProyecto = tareasList.filter(tarea => tarea.idProyecto === proyectoID);\n        setTareas(tareasProyecto);\n        console.log(\"Lista de tareas del proyecto filtradas: \", tareasProyecto);\n      }\n    };\n    fetchTareas();\n  }, []);\n  if (!usuarioID || !proyectoID || !usuarioActual) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }, this);\n  }\n\n  //Función para generar las estrellas \n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Plataforma\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Tab\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Proyex logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Bienvenido: \", usuarioActual.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Cerrar Sesi\\xF3n \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Element-Data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Title\",\n        children: \"Lista de Tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Section\",\n        children: tareas.map(tarea => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Member\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tarea:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 36\n            }, this), \"   \", tarea.nombre, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Descripci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 36\n            }, this), \" \", tarea.descripcion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Prioridad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, tarea.tareaID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(EnlistarTareas, \"/RpGKvaZjgUS3T40arlPu9ktY+Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EnlistarTareas;\nvar _c;\n$RefreshReg$(_c, \"EnlistarTareas\");","map":{"version":3,"names":["React","useState","useEffect","logo","Stars","Select","useNavigate","useParams","app","getDatabase","get","ref","set","push","jsxDEV","_jsxDEV","EnlistarTareas","_s","usuarioID","proyectoID","usuarioActual","setUsuarioActual","proyectoActual","setProyectoActual","tareas","setTareas","navigate","fetchUsuario","db","dbRef","snapshot","exists","userData","val","console","log","error","fetchProyecto","projectData","fetchTareas","tareasData","tareasList","Object","keys","map","myID","tareaID","tareasProyecto","filter","tarea","idProyecto","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","nombre","descripcion","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/EnlistarTareas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n//Parte gráfica\r\nimport './styles/EnlistarTareas.css';\r\nimport logo from '../images/icon.png';\r\nimport { Stars } from '@mui/icons-material';\r\nimport Select from 'react-select'\r\n\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref, set, push } from 'firebase/database';\r\n\r\nexport default function EnlistarTareas() {\r\n    const { usuarioID, proyectoID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n    const [proyectoActual, setProyectoActual] = useState(null);\r\n\r\n    const [tareas, setTareas] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n        const fetchUsuario = async() => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                    console.log(\"Dentro de crearTarea, si agarramos usuario\");\r\n                }else{\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        const fetchProyecto = async() => {\r\n            try{\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `proyectos/${proyectoID}`);\r\n                const snapshot = await get(dbRef);\r\n\r\n                if (snapshot.exists()){\r\n                    const projectData = snapshot.val();\r\n                    setProyectoActual(projectData);\r\n                    console.log(\"Dentro de crearTarea, si agarramos proyecto\");\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n        fetchProyecto();\r\n    }, [usuarioID, proyectoID]);\r\n\r\n    //Array de todos los usuarios como tal dentro del proyecto\r\n    useEffect(() => {\r\n        const fetchTareas = async() => {\r\n            const db = getDatabase(app);\r\n            const dbRef = ref(db, `tareas`);\r\n            const snapshot = await get(dbRef);\r\n\r\n            if (snapshot.exists()){\r\n                const tareasData = snapshot.val();\r\n                const tareasList = Object.keys(tareasData).map(myID => {\r\n                    return {\r\n                        ...tareasData[myID],\r\n                        tareaID: myID\r\n                    }\r\n                })\r\n\r\n                /*Tenemos que filtrar las tareas y que estén basadas de acuerdo al proyecto como tal*/\r\n                console.log(\"Lista de tareas sin filtrado: \", tareasList);\r\n\r\n                const tareasProyecto = tareasList.filter(tarea => tarea.idProyecto === proyectoID);\r\n\r\n                setTareas(tareasProyecto);\r\n                console.log(\"Lista de tareas del proyecto filtradas: \", tareasProyecto);\r\n            }\r\n        }\r\n        fetchTareas();\r\n    }, [])\r\n\r\n    \r\n    if (!usuarioID || !proyectoID || !usuarioActual){\r\n        return <div>Cargando</div>\r\n    }\r\n\r\n    //Función para generar las estrellas \r\n\r\n    return (\r\n        <section className=\"Plataforma\">\r\n            <section className='Tab'>\r\n                <div>\r\n                    <img src={logo} alt='Proyex logo'/>\r\n                    <label>Bienvenido: {usuarioActual.nombre}</label>\r\n                </div>\r\n                <div>\r\n                    {/*Creamos un botón con la función de cerrar sesión*/}\r\n                    <button> Cerrar Sesión </button> {/*Cerrar sesión  Log out*/}\r\n                </div>\r\n            </section>\r\n\r\n            <section className='Element-Data'>\r\n                <label className='Title'>Lista de Tareas</label>\r\n                <div className='Section'>\r\n                    {tareas.map(tarea => (\r\n                        <div key={tarea.tareaID} className='Member'>\r\n                            <label><strong>Tarea:</strong>   {tarea.nombre} </label>\r\n                            <label><strong>Descripción:</strong> {tarea.descripcion}</label>\r\n                            <label><strong>Prioridad:</strong></label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}