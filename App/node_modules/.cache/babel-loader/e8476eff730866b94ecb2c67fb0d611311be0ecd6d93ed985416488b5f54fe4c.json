{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\CambiarContrase\\xF1a.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/CambiarContraseña.css';\n\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\n//import { URL } from './data.js'\n\n//Base de datos por firebase\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, ref, update, get } from \"firebase/database\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CambiarContraseña() {\n  _s();\n  const [usuarioCambio, setUsuarioCambio] = useState({\n    correo: \"\",\n    password: \"\",\n    rechecarPassword: \"\"\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      //Tomamos la base de datos a la cual nos conectamos\n      const db = getDatabase(app);\n\n      //Referenciamos la base de datos, la ubicación donde guardamos los usuarios\n      const dbRef = ref(db, \"usuarios\");\n\n      //Buscamos información dentro de los casos, mediante un snapshot\n      const snapshot = await get(dbRef);\n      if (snapshot.exists()) {\n        //Acá vamos a agarrar los datos junto al id como tal\n        const myData = snapshot.val();\n        /*Se observa de ésta manera:\r\n        -Ntxj3bMCCnRtFWxzD12 (id a sacar)\r\n            correo\r\n            nombre\r\n            password\r\n        */\n\n        //Primero debemos de agarrar todas las llaves como tal\n        const temporaryArray = Object.keys(myData).map(myId => {\n          return {\n            ...myData[myId],\n            usuarioID: myId\n          };\n        });\n        /*Tendríamos algo como ésto sin el map: \r\n        [Ntxj3bMCCnRtFWxzD12, ...]\r\n        \r\n        Con el mapeado tendremos ahora el dato de acuerdo al array, y la id como tal\r\n        \"mauHernandez@gmail.com\", \"Michael\", \"m4uH3rn4nd3z\", Ntxj3bMCCnRtFWxzD12\r\n        */\n\n        setUsuarios(temporaryArray);\n        console.log(\"Todos los datos de usuarios: \", temporaryArray);\n        /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n        objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/\n      } else {\n        alert(\"No hay valores dentro de nuestra tabla de base de datos\");\n      }\n    };\n    fetchAllUsers();\n  }, []);\n\n  //Función para establecer cambios\n  const handleUserChange = event => {\n    setUsuarioCambio(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const handleCambioContraseña = async event => {\n    event.preventDefault(); //Evitamos reinicio de pantalla\n\n    try {\n      //Checar todos los cambios completos\n      if (!usuarioCambio.correo || !usuarioCambio.password || !usuarioCambio.rechecarPassword) {\n        alert(\"Por favor, completar todos los campos\");\n        return;\n      }\n\n      //Checamos si las 2 contraseñas son iguales\n      if (usuarioCambio.password !== usuarioCambio.rechecarPassword) {\n        alert(\"La contraseña ingresada debe ser igual en ambos campos\");\n        return;\n      }\n\n      //Encontrar el usuario por correo electrónico\n      const usuario = usuarios.find(user => user.correo === usuarioCambio.correo);\n\n      //Checar si el usuario existe\n      if (!usuario) {\n        alert(\"El correo electrónico ingresado no existe en la Base de Datos\");\n        return;\n      }\n\n      //Checamos si la contraseña usada nueva es la misma al anterior\n      if (usuarioCambio.password === usuario.password) {\n        alert(\"La contraseña ingresada es igual a la anterior usada\");\n        return;\n      }\n\n      //Actualizar la contraseña usando la id de usuario\n      const db = getDatabase(app);\n      const updUsuarioRef = ref(db, \"usuarios/\" + usuario.usuarioID);\n      await update(updUsuarioRef, {\n        password: usuarioCambio.password\n      });\n\n      //Actualización se ha hecho de forma correcta\n      alert(\"Se ha actualizado correctamente la contraseña\");\n      navigate(\"/iniciarSesion\");\n    } catch (error) {\n      console.error(\"Ha aparecido un error: \", error);\n      alert(\"Error al actualizar la contraseña\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"Titulo\",\n          children: \"Modificar contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escriba el correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'email',\n          placeholder: \"mauHernandez@gmail.com\",\n          name: \"correo\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escriba contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'password',\n          placeholder: \"**********\",\n          name: \"password\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escriba de nuevo la contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'password',\n          placeholder: \"**********\",\n          name: \"rechecarPassword\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCambioContraseña,\n          children: \"Aplicar cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(CambiarContraseña, \"CtGufA0JYQq/KAYzWOr9yjjbu6E=\", false, function () {\n  return [useNavigate];\n});\n_c = CambiarContraseña;\nvar _c;\n$RefreshReg$(_c, \"CambiarContrase\\xF1a\");","map":{"version":3,"names":["React","useState","useEffect","app","getDatabase","ref","update","get","useNavigate","jsxDEV","_jsxDEV","CambiarContraseña","_s","usuarioCambio","setUsuarioCambio","correo","password","rechecarPassword","usuarios","setUsuarios","navigate","fetchAllUsers","db","dbRef","snapshot","exists","myData","val","temporaryArray","Object","keys","map","myId","usuarioID","console","log","alert","handleUserChange","event","prev","target","name","value","handleCambioContraseña","preventDefault","usuario","find","user","updUsuarioRef","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/CambiarContraseña.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/CambiarContraseña.css';\r\n\r\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\r\n//import { URL } from './data.js'\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, ref, update, get } from \"firebase/database\"\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CambiarContraseña() {\r\n    const [usuarioCambio, setUsuarioCambio] = useState({\r\n        correo: \"\",\r\n        password: \"\",\r\n        rechecarPassword: \"\"\r\n    });\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAllUsers = async() => {\r\n            //Tomamos la base de datos a la cual nos conectamos\r\n            const db = getDatabase(app);\r\n\r\n            //Referenciamos la base de datos, la ubicación donde guardamos los usuarios\r\n            const dbRef = ref(db, \"usuarios\");\r\n\r\n            //Buscamos información dentro de los casos, mediante un snapshot\r\n            const snapshot = await get(dbRef);\r\n\r\n            if (snapshot.exists()) {\r\n                //Acá vamos a agarrar los datos junto al id como tal\r\n                const myData = snapshot.val();\r\n                /*Se observa de ésta manera:\r\n                -Ntxj3bMCCnRtFWxzD12 (id a sacar)\r\n                    correo\r\n                    nombre\r\n                    password\r\n                */\r\n\r\n                //Primero debemos de agarrar todas las llaves como tal\r\n                const temporaryArray = Object.keys(myData).map( myId => {\r\n                    return {\r\n                        ...myData[myId],\r\n                        usuarioID: myId\r\n                    }\r\n                });\r\n                /*Tendríamos algo como ésto sin el map: \r\n                [Ntxj3bMCCnRtFWxzD12, ...]\r\n                \r\n                Con el mapeado tendremos ahora el dato de acuerdo al array, y la id como tal\r\n                \"mauHernandez@gmail.com\", \"Michael\", \"m4uH3rn4nd3z\", Ntxj3bMCCnRtFWxzD12\r\n                */\r\n\r\n                setUsuarios(temporaryArray);\r\n                console.log(\"Todos los datos de usuarios: \", temporaryArray);\r\n                /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n                objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/\r\n            } else{\r\n                alert(\"No hay valores dentro de nuestra tabla de base de datos\");\r\n            }\r\n        };\r\n        fetchAllUsers();\r\n    }, []);\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n        setUsuarioCambio(\r\n          prev => ({...prev, [event.target.name]: event.target.value})\r\n        );\r\n      }\r\n\r\n    const handleCambioContraseña = async(event) => {\r\n        event.preventDefault(); //Evitamos reinicio de pantalla\r\n\r\n        try {\r\n            //Checar todos los cambios completos\r\n            if (!usuarioCambio.correo || !usuarioCambio.password || !usuarioCambio.rechecarPassword){\r\n                alert(\"Por favor, completar todos los campos\");\r\n                return;\r\n            }\r\n\r\n            //Checamos si las 2 contraseñas son iguales\r\n            if (usuarioCambio.password !== usuarioCambio.rechecarPassword) {\r\n                alert(\"La contraseña ingresada debe ser igual en ambos campos\");\r\n                return;\r\n            }\r\n\r\n            //Encontrar el usuario por correo electrónico\r\n            const usuario = usuarios.find((user) => user.correo === usuarioCambio.correo );\r\n\r\n            //Checar si el usuario existe\r\n            if (!usuario) {\r\n                alert(\"El correo electrónico ingresado no existe en la Base de Datos\");\r\n                return;\r\n            }\r\n\r\n            //Checamos si la contraseña usada nueva es la misma al anterior\r\n            if (usuarioCambio.password === usuario.password){\r\n                alert(\"La contraseña ingresada es igual a la anterior usada\");\r\n                return;\r\n            }\r\n\r\n            //Actualizar la contraseña usando la id de usuario\r\n            const db = getDatabase(app);\r\n            const updUsuarioRef = ref(db, \"usuarios/\"+usuario.usuarioID);\r\n            await update(updUsuarioRef, {\r\n                password: usuarioCambio.password\r\n            });\r\n\r\n            //Actualización se ha hecho de forma correcta\r\n            alert(\"Se ha actualizado correctamente la contraseña\");\r\n            navigate(\"/iniciarSesion\");\r\n        }catch(error){\r\n            console.error(\"Ha aparecido un error: \", error);\r\n            alert(\"Error al actualizar la contraseña\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"App-content\">\r\n            <form className='Form'>\r\n                <div className='Elemento'>\r\n                    <label className='Titulo'>Modificar contraseña</label>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Escriba el correo</label>\r\n                    <input type={'email'} placeholder='mauHernandez@gmail.com' name='correo'\r\n                    onChange={handleUserChange}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Escriba contraseña</label>\r\n                    <input type={'password'} placeholder='**********' name='password'\r\n                    onChange={handleUserChange}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Escriba de nuevo la contraseña</label>\r\n                    <input type={'password'} placeholder='**********' name='rechecarPassword'\r\n                    onChange={handleUserChange}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <button onClick={handleCambioContraseña}>Aplicar cambios</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}