{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\IniciarSesion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/IniciarSesion.css'; //Importamos las librerías\n\n//Cambiar modos de contraseña o correo\n\n//Importamos url y axios para uso de api  (Base de datos local)\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\n//import { URL } from './data.js'\n\n//Importamos el sistema a cambiar de página\nimport { useNavigate, Link } from \"react-router-dom\";\n\n//Base de datos por firebase\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, ref, get } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IniciarSesion() {\n  _s();\n  //Muy basado en Registrar.jsx, checar la documentación de éste\n  const [usuarioLogin, setUsuarioLogin] = useState({\n    correo: \"\",\n    password: \"\"\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const navigate = useNavigate();\n\n  //Sacamos los datos de los usuarios\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      //Tomamos la base de datos a la cual nos conectamos\n      const db = getDatabase(app);\n\n      //Referenciamos la base de datos, la ubicación donde guardamos los usuarios\n      const dbRef = ref(db, \"usuarios\");\n\n      //Buscamos información dentro de los casos, mediante un snapshot\n      const snapshot = await get(dbRef);\n\n      //Checar documentación de la siguiente modificación de datas en CambiarContraseña.jsx\n\n      if (snapshot.exists()) {\n        const myData = snapshot.val();\n        const temporaryArray = Object.keys(myData).map(myId => {\n          return {\n            ...myData[myId],\n            usuarioID: myId\n          };\n        });\n        setUsuarios(temporaryArray);\n        console.log(\"Todos los datos de usuarios: \", temporaryArray);\n\n        /*          Así lucía antes\r\n          //Si el snapshot existe, entonces vamos a asignar los datos como tal\r\n          setUsuarios(Object.values(snapshot.val()));\r\n        console.log(\"Todos los datos de usuarios: \", Object.values(snapshot.val()));\r\n        \r\n        /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n        objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/\n      } else {\n        console.log(\"No hay valores dentro de nuestra tabla de base de datos\");\n      }\n    };\n    fetchAllUsers();\n  }, []);\n\n  //Función para establecer cambios\n  const handleUserChange = event => {\n    setUsuarioLogin(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  /*Función encargada de presionar botones\r\n  const pressIniciarSesion = async(event) => {\r\n    event.preventDefault(); //Evitamos reinicio de pantalla\r\n      console.log('Presionamos el botón para encargarnos de iniciar sesión como tal');\r\n    try {\r\n      if (!usuarioLogin.correo || !usuarioLogin.password){\r\n        alert('Por favor, completa todos los campos.');\r\n        return;\r\n      }\r\n        const usuarioExists = usuarios.some((usuario) => \r\n        usuario.correo === usuarioLogin.correo && usuario.password === usuarioLogin.password\r\n      )\r\n        if (!usuarioExists){\r\n        alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o correo\");\r\n        return;\r\n      }\r\n        navigate(\"/plataforma\");\r\n    }catch (error) {\r\n      console.error(\"Ha aparecido un error: \", error);\r\n    }\r\n  }*/\n\n  const handleIniciarSesion = async event => {\n    event.preventDefault(); //Evitamos reinicio de pantalla\n    try {\n      //Validamos los campos que no estén vacíos\n      if (!usuarioLogin.correo || !usuarioLogin.password) {\n        alert('Por favor, completa todos los campos.');\n        return;\n      }\n\n      //Encontramos el usuario que cumpla igualdad de condiciones con correo y contraseña\n      const usuario = usuarios.find(user => user.correo === usuarioLogin.correo && user.password === usuarioLogin.password);\n      if (!usuario) {\n        alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o usar otro correo\");\n        return;\n      }\n      console.log(\"Valor antes de ser enviado a otra página: \", usuario.usuarioID);\n\n      //Ahora navegamos a PlataformaGestión, no con el objeto usuario pero con la id para tomar dicho usuario\n      navigate(`/plataforma/${usuario.usuarioID}`);\n    } catch (error) {\n      console.error(\"Ha aparecido un error: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"Titulo\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correo Electr\\xF3nico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'email',\n          placeholder: \"mauHernandez@gmail.com\",\n          name: \"correo\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'password',\n          placeholder: \"**********\",\n          name: \"password\",\n          onChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Elemento\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/contrase\\xF1a\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\xBFHas olvidado tu correo electr\\xF3nico?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleIniciarSesion,\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }, this);\n}\n_s(IniciarSesion, \"RkYprILrn4mKumfBd5pmfqYAh5o=\", false, function () {\n  return [useNavigate];\n});\n_c = IniciarSesion;\nvar _c;\n$RefreshReg$(_c, \"IniciarSesion\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","app","getDatabase","ref","get","jsxDEV","_jsxDEV","IniciarSesion","_s","usuarioLogin","setUsuarioLogin","correo","password","usuarios","setUsuarios","navigate","fetchAllUsers","db","dbRef","snapshot","exists","myData","val","temporaryArray","Object","keys","map","myId","usuarioID","console","log","handleUserChange","event","prev","target","name","value","handleIniciarSesion","preventDefault","alert","usuario","find","user","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/IniciarSesion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/IniciarSesion.css'; //Importamos las librerías\r\n\r\n//Cambiar modos de contraseña o correo\r\n\r\n//Importamos url y axios para uso de api  (Base de datos local)\r\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\r\n//import { URL } from './data.js'\r\n\r\n//Importamos el sistema a cambiar de página\r\nimport { useNavigate, Link } from \"react-router-dom\"\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, ref, get } from \"firebase/database\"\r\n\r\nexport default function IniciarSesion() {\r\n    //Muy basado en Registrar.jsx, checar la documentación de éste\r\n    const [usuarioLogin, setUsuarioLogin] = useState({\r\n      correo: \"\",\r\n      password: \"\"\r\n    })\r\n    \r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //Sacamos los datos de los usuarios\r\n    useEffect(() => {\r\n      const fetchAllUsers = async() => {\r\n        //Tomamos la base de datos a la cual nos conectamos\r\n        const db = getDatabase(app);\r\n\r\n        //Referenciamos la base de datos, la ubicación donde guardamos los usuarios\r\n        const dbRef = ref(db, \"usuarios\");\r\n\r\n        //Buscamos información dentro de los casos, mediante un snapshot\r\n        const snapshot = await get(dbRef);\r\n\r\n        //Checar documentación de la siguiente modificación de datas en CambiarContraseña.jsx\r\n\r\n        if (snapshot.exists()){\r\n          const myData = snapshot.val();\r\n          const temporaryArray = Object.keys(myData).map( myId => {\r\n            return {\r\n              ...myData[myId],\r\n              usuarioID: myId\r\n            }\r\n          });\r\n\r\n          setUsuarios(temporaryArray);\r\n          console.log(\"Todos los datos de usuarios: \", temporaryArray);\r\n\r\n          /*          Así lucía antes\r\n\r\n          //Si el snapshot existe, entonces vamos a asignar los datos como tal\r\n\r\n          setUsuarios(Object.values(snapshot.val()));\r\n          console.log(\"Todos los datos de usuarios: \", Object.values(snapshot.val()));\r\n          \r\n          /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n          objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/\r\n        } else{\r\n            console.log(\"No hay valores dentro de nuestra tabla de base de datos\");\r\n        }\r\n      };\r\n      fetchAllUsers();\r\n    }, []);\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n      setUsuarioLogin(\r\n        prev => ({...prev, [event.target.name]: event.target.value})\r\n      );\r\n    }\r\n    \r\n    /*Función encargada de presionar botones\r\n    const pressIniciarSesion = async(event) => {\r\n      event.preventDefault(); //Evitamos reinicio de pantalla\r\n\r\n      console.log('Presionamos el botón para encargarnos de iniciar sesión como tal');\r\n      try {\r\n        if (!usuarioLogin.correo || !usuarioLogin.password){\r\n          alert('Por favor, completa todos los campos.');\r\n          return;\r\n        }\r\n\r\n        const usuarioExists = usuarios.some((usuario) => \r\n          usuario.correo === usuarioLogin.correo && usuario.password === usuarioLogin.password\r\n        )\r\n\r\n        if (!usuarioExists){\r\n          alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o correo\");\r\n          return;\r\n        }\r\n\r\n        navigate(\"/plataforma\");\r\n      }catch (error) {\r\n        console.error(\"Ha aparecido un error: \", error);\r\n      }\r\n    }*/\r\n\r\n    const handleIniciarSesion = async(event) => {\r\n      event.preventDefault(); //Evitamos reinicio de pantalla\r\n      try{\r\n        //Validamos los campos que no estén vacíos\r\n        if (!usuarioLogin.correo || !usuarioLogin.password){\r\n          alert('Por favor, completa todos los campos.');\r\n          return;\r\n        }\r\n\r\n        //Encontramos el usuario que cumpla igualdad de condiciones con correo y contraseña\r\n        const usuario = usuarios.find((user) => \r\n          user.correo === usuarioLogin.correo && user.password === usuarioLogin.password\r\n        )\r\n\r\n        if (!usuario){\r\n          alert(\"El usuario no se encuentra en la base de datos, prueba a cambiar contraseña o usar otro correo\");\r\n          return;\r\n        }\r\n\r\n        console.log(\"Valor antes de ser enviado a otra página: \", usuario.usuarioID);\r\n\r\n        //Ahora navegamos a PlataformaGestión, no con el objeto usuario pero con la id para tomar dicho usuario\r\n        navigate(`/plataforma/${usuario.usuarioID}`);\r\n      }catch (error) {\r\n        console.error(\"Ha aparecido un error: \", error);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <section className=\"App-content\">\r\n        <form className='Form'>\r\n          <div className='Elemento'>\r\n            <label className='Titulo'>Login</label>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Correo Electrónico</label>\r\n            <input type={'email'} placeholder='mauHernandez@gmail.com' name='correo'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <label>Contraseña</label>\r\n            <input type={'password'} placeholder='**********' name='password'\r\n            onChange={handleUserChange}/>\r\n          </div>\r\n\r\n          <div className='Elemento'>\r\n            <Link to=\"/contraseña\">\r\n              <a>¿Has olvidado tu correo electrónico?</a>\r\n            </Link>\r\n            <button onClick={handleIniciarSesion}>Iniciar Sesión</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}