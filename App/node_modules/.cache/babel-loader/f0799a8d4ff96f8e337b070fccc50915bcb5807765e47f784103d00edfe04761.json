{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles/CambiarContraseña.css';//import axios from 'axios'; //Importamos el encargado de respuestas de api\n//import { URL } from './data.js'\n//Base de datos por firebase\nimport app from\"../firebaseConfig.js\";import{getDatabase,ref,update,get}from\"firebase/database\";import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CambiarContraseña(){const[usuarioCambio,setUsuarioCambio]=useState({correo:\"\",password:\"\",rechecarPassword:\"\"});const[usuarios,setUsuarios]=useState([]);const navigate=useNavigate();useEffect(()=>{const fetchAllUsers=async()=>{//Tomamos la base de datos a la cual nos conectamos\nconst db=getDatabase(app);//Referenciamos la base de datos, la ubicación donde guardamos los usuarios\nconst dbRef=ref(db,\"usuarios\");//Buscamos información dentro de los casos, mediante un snapshot\nconst snapshot=await get(dbRef);if(snapshot.exists()){//Acá vamos a agarrar los datos junto al id como tal\nconst myData=snapshot.val();/*Se observa de ésta manera:\r\n                -Ntxj3bMCCnRtFWxzD12 (id a sacar)\r\n                    correo\r\n                    nombre\r\n                    password\r\n                */ //Primero debemos de agarrar todas las llaves como tal\nconst temporaryArray=Object.keys(myData).map(myId=>{return{...myData[myId],usuarioID:myId};});/*Tendríamos algo como ésto sin el map: \r\n                [Ntxj3bMCCnRtFWxzD12, ...]\r\n                \r\n                Con el mapeado tendremos ahora el dato de acuerdo al array, y la id como tal\r\n                \"mauHernandez@gmail.com\", \"Michael\", \"m4uH3rn4nd3z\", Ntxj3bMCCnRtFWxzD12\r\n                */setUsuarios(temporaryArray);console.log(\"Todos los datos de usuarios: \",temporaryArray);/*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n                objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/}else{alert(\"No hay valores dentro de nuestra tabla de base de datos\");}};fetchAllUsers();},[]);//Función para establecer cambios\nconst handleUserChange=event=>{setUsuarioCambio(prev=>({...prev,[event.target.name]:event.target.value}));};const handleCambioContraseña=async event=>{event.preventDefault();//Evitamos reinicio de pantalla\ntry{//Checar todos los cambios completos\nif(!usuarioCambio.correo||!usuarioCambio.password||!usuarioCambio.rechecarPassword){alert(\"Por favor, completar todos los campos\");return;}//Checamos si las 2 contraseñas son iguales\nif(usuarioCambio.password!==usuarioCambio.rechecarPassword){alert(\"La contraseña ingresada debe ser igual en ambos campos\");return;}//Encontrar el usuario por correo electrónico\nconst usuario=usuarios.find(user=>user.correo===usuarioCambio.correo);//Checar si el usuario existe\nif(!usuario){alert(\"El correo electrónico ingresado no existe en la Base de Datos\");return;}//Checamos si la contraseña usada nueva es la misma al anterior\nif(usuarioCambio.password===usuario.password){alert(\"La contraseña ingresada es igual a la anterior usada\");return;}//Actualizar la contraseña usando la id de usuario\nconst db=getDatabase(app);const updUsuarioRef=ref(db,\"usuarios/\"+usuario.usuarioID);await update(updUsuarioRef,{password:usuarioCambio.password});//Actualización se ha hecho de forma correcta\nalert(\"Se ha actualizado correctamente la contraseña\");navigate(\"/iniciarSesion\");}catch(error){console.error(\"Ha aparecido un error: \",error);alert(\"Error al actualizar la contraseña\");}};return/*#__PURE__*/_jsx(\"section\",{className:\"App-content\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"Form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"label\",{className:\"Titulo\",children:\"Modificar contrase\\xF1a\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Escriba el correo\"}),/*#__PURE__*/_jsx(\"input\",{type:'email',placeholder:\"mauHernandez@gmail.com\",name:\"correo\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Escriba contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:'password',placeholder:\"**********\",name:\"password\",onChange:handleUserChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Elemento\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Escriba de nuevo la contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:'password',placeholder:\"**********\",name:\"rechecarPassword\",onChange:handleUserChange})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleCambioContraseña,children:\"Aplicar cambios\"})})]})});}","map":{"version":3,"names":["React","useState","useEffect","app","getDatabase","ref","update","get","useNavigate","jsx","_jsx","jsxs","_jsxs","CambiarContraseña","usuarioCambio","setUsuarioCambio","correo","password","rechecarPassword","usuarios","setUsuarios","navigate","fetchAllUsers","db","dbRef","snapshot","exists","myData","val","temporaryArray","Object","keys","map","myId","usuarioID","console","log","alert","handleUserChange","event","prev","target","name","value","handleCambioContraseña","preventDefault","usuario","find","user","updUsuarioRef","error","className","children","type","placeholder","onChange","onClick"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/CambiarContraseña.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/CambiarContraseña.css';\r\n\r\n//import axios from 'axios'; //Importamos el encargado de respuestas de api\r\n//import { URL } from './data.js'\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, ref, update, get } from \"firebase/database\"\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CambiarContraseña() {\r\n    const [usuarioCambio, setUsuarioCambio] = useState({\r\n        correo: \"\",\r\n        password: \"\",\r\n        rechecarPassword: \"\"\r\n    });\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAllUsers = async() => {\r\n            //Tomamos la base de datos a la cual nos conectamos\r\n            const db = getDatabase(app);\r\n\r\n            //Referenciamos la base de datos, la ubicación donde guardamos los usuarios\r\n            const dbRef = ref(db, \"usuarios\");\r\n\r\n            //Buscamos información dentro de los casos, mediante un snapshot\r\n            const snapshot = await get(dbRef);\r\n\r\n            if (snapshot.exists()) {\r\n                //Acá vamos a agarrar los datos junto al id como tal\r\n                const myData = snapshot.val();\r\n                /*Se observa de ésta manera:\r\n                -Ntxj3bMCCnRtFWxzD12 (id a sacar)\r\n                    correo\r\n                    nombre\r\n                    password\r\n                */\r\n\r\n                //Primero debemos de agarrar todas las llaves como tal\r\n                const temporaryArray = Object.keys(myData).map( myId => {\r\n                    return {\r\n                        ...myData[myId],\r\n                        usuarioID: myId\r\n                    }\r\n                });\r\n                /*Tendríamos algo como ésto sin el map: \r\n                [Ntxj3bMCCnRtFWxzD12, ...]\r\n                \r\n                Con el mapeado tendremos ahora el dato de acuerdo al array, y la id como tal\r\n                \"mauHernandez@gmail.com\", \"Michael\", \"m4uH3rn4nd3z\", Ntxj3bMCCnRtFWxzD12\r\n                */\r\n\r\n                setUsuarios(temporaryArray);\r\n                console.log(\"Todos los datos de usuarios: \", temporaryArray);\r\n                /*Inicialmente sin el snapshot.val, tenemos datos estilo json, luego con éste, tendríamos un \r\n                objeto de javascript, y finalmente con Object.values tendríamos un array de objetos JavaScript*/\r\n            } else{\r\n                alert(\"No hay valores dentro de nuestra tabla de base de datos\");\r\n            }\r\n        };\r\n        fetchAllUsers();\r\n    }, []);\r\n\r\n    //Función para establecer cambios\r\n    const handleUserChange = (event) => {\r\n        setUsuarioCambio(\r\n          prev => ({...prev, [event.target.name]: event.target.value})\r\n        );\r\n      }\r\n\r\n    const handleCambioContraseña = async(event) => {\r\n        event.preventDefault(); //Evitamos reinicio de pantalla\r\n\r\n        try {\r\n            //Checar todos los cambios completos\r\n            if (!usuarioCambio.correo || !usuarioCambio.password || !usuarioCambio.rechecarPassword){\r\n                alert(\"Por favor, completar todos los campos\");\r\n                return;\r\n            }\r\n\r\n            //Checamos si las 2 contraseñas son iguales\r\n            if (usuarioCambio.password !== usuarioCambio.rechecarPassword) {\r\n                alert(\"La contraseña ingresada debe ser igual en ambos campos\");\r\n                return;\r\n            }\r\n\r\n            //Encontrar el usuario por correo electrónico\r\n            const usuario = usuarios.find((user) => user.correo === usuarioCambio.correo );\r\n\r\n            //Checar si el usuario existe\r\n            if (!usuario) {\r\n                alert(\"El correo electrónico ingresado no existe en la Base de Datos\");\r\n                return;\r\n            }\r\n\r\n            //Checamos si la contraseña usada nueva es la misma al anterior\r\n            if (usuarioCambio.password === usuario.password){\r\n                alert(\"La contraseña ingresada es igual a la anterior usada\");\r\n                return;\r\n            }\r\n\r\n            //Actualizar la contraseña usando la id de usuario\r\n            const db = getDatabase(app);\r\n            const updUsuarioRef = ref(db, \"usuarios/\"+usuario.usuarioID);\r\n            await update(updUsuarioRef, {\r\n                password: usuarioCambio.password\r\n            });\r\n\r\n            //Actualización se ha hecho de forma correcta\r\n            alert(\"Se ha actualizado correctamente la contraseña\");\r\n            navigate(\"/iniciarSesion\");\r\n        }catch(error){\r\n            console.error(\"Ha aparecido un error: \", error);\r\n            alert(\"Error al actualizar la contraseña\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"App-content\">\r\n            <form className='Form'>\r\n                <div className='Elemento'>\r\n                    <label className='Titulo'>Modificar contraseña</label>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Escriba el correo</label>\r\n                    <input type={'email'} placeholder='mauHernandez@gmail.com' name='correo'\r\n                    onChange={handleUserChange}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Escriba contraseña</label>\r\n                    <input type={'password'} placeholder='**********' name='password'\r\n                    onChange={handleUserChange}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <label>Escriba de nuevo la contraseña</label>\r\n                    <input type={'password'} placeholder='**********' name='rechecarPassword'\r\n                    onChange={handleUserChange}/>\r\n                </div>\r\n\r\n                <div className='Elemento'>\r\n                    <button onClick={handleCambioContraseña}>Aplicar cambios</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}