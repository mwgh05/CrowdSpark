{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles/PlataformaGestion.css';import logo from'../images/icon.png';import{Link}from\"react-router-dom\";/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/import{useParams}from'react-router-dom';//Base de datos por firebase\nimport app from\"../firebaseConfig.js\";import{getDatabase,get,ref}from'firebase/database';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Tareas(){//Accesamos a la id del usuario desde el parámetro url\nconst{usuarioID,proyectoID}=useParams();//Usamos el state para restaurar datos o información\nconst[usuarioActual,setUsuarioActual]=useState(null);const[proyectoActual,setProyectoActual]=useState(null);console.log(\"Parametro recibido: \",usuarioID);useEffect(()=>{//Traemos la información de dicho usuario específico\nconst fetchUsuario=async()=>{try{//Primero seteamos la base de datos como tal, checando directamente la id\nconst db=getDatabase(app);const dbRef=ref(db,\"usuarios/\".concat(usuarioID));//Tomamos la data directamente de dicho usuarioID\nconst snapshot=await get(dbRef);//Checamos si existe un snapshot con dicha información específica\nif(snapshot.exists()){//Extraemos la información del usuario del snapshot\nconst userData=snapshot.val();//Seteamos la data de usuario en nuestro estado global de usuario\nsetUsuarioActual(userData);}else{console.log(\"No se encontró un usuario con dicha información\");}}catch(error){console.error(\"Error consiguiendo la información del usuario\");}};const fetchProyecto=async()=>{try{const db=getDatabase(app);const dbRef=ref(db,\"proyectos/\".concat(proyectoID));const snapshot=await get(dbRef);if(snapshot.exists()){const projectData=snapshot.val();setProyectoActual(projectData);}}catch(error){console.error(\"Error consiguiendo la información del usuario\");}};fetchUsuario();fetchProyecto();},[usuarioID,proyectoID]);//Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\nif(!usuarioID||!proyectoID||!usuarioActual||!proyectoActual){return/*#__PURE__*/_jsx(\"div\",{children:\"Cargando\"});}const isLider=proyectoActual.lider===usuarioID;console.log(\"Entrando al proyecto a agregar tareas\");console.log(\"Información del usuario actual: \",usuarioActual);console.log(\"Información del proyecto actual: \",proyectoActual);console.log(\"Par\\xE1metros recibidos: \".concat(usuarioID,\"   -   \").concat(proyectoID));return/*#__PURE__*/_jsxs(\"section\",{className:\"Plataforma\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"Tab\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Proyex logo\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Bienvenido: \",usuarioActual.nombre]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{children:\" Cerrar Sesi\\xF3n \"}),\" \"]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"Menu\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"label\",{className:\"Titulo\",children:\"Gesti\\xF3n de Tareas\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Secciones\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:isLider&&/*#__PURE__*/_jsx(Link,{to:\"/NuevaTarea/\".concat(usuarioID,\"/\").concat(proyectoID),children:/*#__PURE__*/_jsx(\"button\",{children:\"Agregar Tareas\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Enlistar Tareas\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Elemento\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Completar o actualizar tareas\"})})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","logo","Link","useParams","app","getDatabase","get","ref","jsx","_jsx","jsxs","_jsxs","Tareas","usuarioID","proyectoID","usuarioActual","setUsuarioActual","proyectoActual","setProyectoActual","console","log","fetchUsuario","db","dbRef","concat","snapshot","exists","userData","val","error","fetchProyecto","projectData","children","isLider","lider","className","src","alt","nombre","to"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/Tareas.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/PlataformaGestion.css';\r\nimport logo from '../images/icon.png';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref } from 'firebase/database';\r\n\r\nexport default function Tareas() {\r\n    //Accesamos a la id del usuario desde el parámetro url\r\n    const { usuarioID, proyectoID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n    const [proyectoActual, setProyectoActual] = useState(null);\r\n\r\n    console.log(\"Parametro recibido: \", usuarioID);\r\n    \r\n    useEffect(() => {\r\n        //Traemos la información de dicho usuario específico\r\n        const fetchUsuario = async() => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                }else{\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        const fetchProyecto = async() => {\r\n            try{\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `proyectos/${proyectoID}`);\r\n                const snapshot = await get(dbRef);\r\n\r\n                if (snapshot.exists()){\r\n                    const projectData = snapshot.val();\r\n                    setProyectoActual(projectData);\r\n                }\r\n            }catch(error){\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n        fetchProyecto();\r\n    }, [usuarioID, proyectoID]); //Incluimos éste caso como dependencia para recorrer el efecto si hay cambios\r\n\r\n    if (!usuarioID || !proyectoID || !usuarioActual || !proyectoActual){\r\n        return <div>Cargando</div>\r\n    }\r\n\r\n    const isLider = proyectoActual.lider === usuarioID;\r\n\r\n    console.log(\"Entrando al proyecto a agregar tareas\");\r\n    console.log(\"Información del usuario actual: \", usuarioActual);\r\n    console.log(\"Información del proyecto actual: \", proyectoActual);\r\n    console.log(`Parámetros recibidos: ${usuarioID}   -   ${proyectoID}`);\r\n\r\n    return (\r\n        <section className=\"Plataforma\">\r\n            <section className='Tab'>\r\n                <div>\r\n                    <img src={logo} alt='Proyex logo'/>\r\n                    <label>Bienvenido: {usuarioActual.nombre}</label>\r\n                </div>\r\n                <div>\r\n                    {/*Creamos un botón con la función de cerrar sesión*/}\r\n                    <button> Cerrar Sesión </button> {/*Cerrar sesión  Log out*/}\r\n                </div>\r\n            </section>\r\n            <section className='Menu'>\r\n                <div className='Elemento'>\r\n                    <label className='Titulo'>Gestión de Tareas</label>\r\n                </div>\r\n                \r\n                <div className='Secciones'>\r\n                    <div className='Elemento'>\r\n                        {/*Si el usuario es líder, entonces mostramos el botón como tal*/}\r\n                        {isLider && \r\n                            <Link to={`/NuevaTarea/${usuarioID}/${proyectoID}`}>\r\n                                <button>Agregar Tareas</button>\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                    <div className='Elemento'>\r\n                        <button>Enlistar Tareas</button>\r\n                    </div>\r\n                    <div className='Elemento'>\r\n                        <button>Completar o actualizar tareas</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}