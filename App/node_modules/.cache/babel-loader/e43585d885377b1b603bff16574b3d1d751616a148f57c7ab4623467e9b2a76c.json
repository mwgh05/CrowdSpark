{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\Gestionador-Proyectos-Grupal\\\\frontend\\\\src\\\\components\\\\EnlistarProyecto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/PlataformaGestion.css';\nimport logo from '../images/icon.png';\nimport { useNavigate, Link } from \"react-router-dom\";\n\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\nimport { useParams } from 'react-router-dom';\n\n//Base de datos por firebase\nimport app from \"../firebaseConfig.js\";\nimport { getDatabase, get, ref, set, push, onValue } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrearProyecto() {\n  _s();\n  const {\n    usuarioID\n  } = useParams();\n\n  //Usamos el state para restaurar datos o información\n  const [usuarioActual, setUsuarioActual] = useState(null);\n  const [proyectos, setProyectos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUsuario = async () => {\n      try {\n        //Primero seteamos la base de datos como tal, checando directamente la id\n        const db = getDatabase(app);\n        const dbRef = ref(db, `usuarios/${usuarioID}`);\n\n        //Tomamos la data directamente de dicho usuarioID\n        const snapshot = await get(dbRef);\n\n        //Checamos si existe un snapshot con dicha información específica\n        if (snapshot.exists()) {\n          //Extraemos la información del usuario del snapshot\n          const userData = snapshot.val();\n\n          //Seteamos la data de usuario en nuestro estado global de usuario\n          setUsuarioActual(userData);\n        } else {\n          console.log(\"No se encontró un usuario con dicha información\");\n        }\n      } catch (error) {\n        console.error(\"Error consiguiendo la información del usuario\");\n      }\n    };\n    fetchUsuario();\n\n    // Fetch projects\n    const fetchProyectos = async () => {\n      try {\n        const db = getDatabase(app);\n        const proyectosRef = ref(db, 'proyectos');\n        onValue(proyectosRef, snapshot => {\n          const data = snapshot.val();\n          if (data) {\n            const proyectosArray = Object.keys(data).map(key => ({\n              id: key,\n              ...data[key]\n            }));\n            setProyectos(proyectosArray);\n          } else {\n            setProyectos([]);\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    };\n    fetchProyectos();\n  }, [usuarioID]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"proyectos-lista\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Proyectos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: proyectos.map(proyecto => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/Proyecto/${proyecto.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: proyecto.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Fecha de Entrega:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 40\n                }, this), \" \", proyecto.fecha]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"L\\xEDder:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 40\n                }, this), \" \", proyecto.lider]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Colaboradores:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 40\n                }, this), \" \", proyecto.colaboradores.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, proyecto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(CrearProyecto, \"RfTdpqqJ0y7dysp/G0c7J5G3IXI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CrearProyecto;\nvar _c;\n$RefreshReg$(_c, \"CrearProyecto\");","map":{"version":3,"names":["React","useState","useEffect","logo","useNavigate","Link","useParams","app","getDatabase","get","ref","set","push","onValue","jsxDEV","_jsxDEV","CrearProyecto","_s","usuarioID","usuarioActual","setUsuarioActual","proyectos","setProyectos","navigate","fetchUsuario","db","dbRef","snapshot","exists","userData","val","console","log","error","fetchProyectos","proyectosRef","data","proyectosArray","Object","keys","map","key","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","proyecto","to","nombre","fecha","lider","colaboradores","join","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/GitHub/Gestionador-Proyectos-Grupal/frontend/src/components/EnlistarProyecto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/PlataformaGestion.css';\r\nimport logo from '../images/icon.png';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n/*Como tal, la plataforma, sea desde registro o desde iniciar sesión, siempre recibe una id de usuario, ésta\r\nid nos servirá para sellar el usuario del sistema a usar, será el parámetro id de usuario*/\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Base de datos por firebase\r\nimport app from \"../firebaseConfig.js\";\r\nimport { getDatabase, get, ref, set, push, onValue } from 'firebase/database';\r\n\r\nexport default function CrearProyecto() {\r\n    const { usuarioID } = useParams();\r\n\r\n    //Usamos el state para restaurar datos o información\r\n    const [usuarioActual, setUsuarioActual] = useState(null);\r\n    const [proyectos, setProyectos] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchUsuario = async () => {\r\n            try {\r\n                //Primero seteamos la base de datos como tal, checando directamente la id\r\n                const db = getDatabase(app);\r\n                const dbRef = ref(db, `usuarios/${usuarioID}`);\r\n\r\n                //Tomamos la data directamente de dicho usuarioID\r\n                const snapshot = await get(dbRef);\r\n\r\n                //Checamos si existe un snapshot con dicha información específica\r\n                if (snapshot.exists()) {\r\n                    //Extraemos la información del usuario del snapshot\r\n                    const userData = snapshot.val();\r\n\r\n                    //Seteamos la data de usuario en nuestro estado global de usuario\r\n                    setUsuarioActual(userData);\r\n                } else {\r\n                    console.log(\"No se encontró un usuario con dicha información\")\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error consiguiendo la información del usuario\")\r\n            }\r\n        };\r\n\r\n        fetchUsuario();\r\n\r\n        // Fetch projects\r\n        const fetchProyectos = async () => {\r\n            try {\r\n                const db = getDatabase(app);\r\n                const proyectosRef = ref(db, 'proyectos');\r\n                onValue(proyectosRef, (snapshot) => {\r\n                    const data = snapshot.val();\r\n                    if (data) {\r\n                        const proyectosArray = Object.keys(data).map(key => ({ id: key, ...data[key] }));\r\n                        setProyectos(proyectosArray);\r\n                    } else {\r\n                        setProyectos([]);\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error fetching projects:\", error);\r\n            }\r\n        };\r\n\r\n        fetchProyectos();\r\n    }, [usuarioID]);\r\n\r\n    return (\r\n        <section className=\"App-content\">\r\n            <div className=\"proyectos-lista\">\r\n                <h2>Proyectos</h2>\r\n                <ul>\r\n                    {proyectos.map(proyecto => (\r\n                        <li key={proyecto.id}>\r\n                            <Link to={`/Proyecto/${proyecto.id}`}>\r\n                                <div>\r\n                                    <h3>{proyecto.nombre}</h3>\r\n                                    <p><strong>Fecha de Entrega:</strong> {proyecto.fecha}</p>\r\n                                    <p><strong>Líder:</strong> {proyecto.lider}</p>\r\n                                    <p><strong>Colaboradores:</strong> {proyecto.colaboradores.join(', ')}</p>\r\n                                </div>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}