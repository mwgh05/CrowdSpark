Primero que todo requerimos tener node js, la versión recomendada. 

=> Luego, ocuparemos tener una cuenta como tal de acceso a firebase, y entrar a la consola de ésta.
=> Posteriormente creamos un proyecto.
=> No es necesario darle click a habilitar Google Analytics, lo desactivamos.

=> Una vez creado, le damos click a nuestro proyecto, y luego elegimos a darle click a la opción de 
"Todos los productos", y le damos click a la opción de Hosting.

=> Le damos click a comenzar la opción.
=> Copiamos el código y lo pegamos en la aplicación del sistema, en la dirección:

$ npm install -g firebase-tools
$ npm install firebase

Luego de ejecutado, le damos click a siguiente en la aplicación de firebase.
Ahora podemos inicializar un proyecto, copiamos la opción de Acceder a Google

$ firebase login

Lo pegamos en nuestra consola o sistema, le damos Y, enter

Luego elegimos la cuenta que vamos a utilizar para el firebase, posteriormente tenemos que permitir
el poder ver, editar y borrar datos de Google CLoud, configuración con Firebase y el uso de Cloud
Platform... más otros permisos.

=> Luego se nos indica que la conexión con Firebase ha sido exitosa.

=> Nuevamente volvemos a nuestra opción en Firebase, ahora nos toca usar el segundo comando:

$ firebase init

=> Pero primero... tenemos que confirmar que nos encontramos en el directorio del proyecto que
deseamos subir, segundo, debemos también saber que éste como tal será el programa o la página web
a subir... ya una vez como tal, podemos usar el comando.

Lo pegamos en la consola en dicha dirección, damos Y, enter.

Acá tenemos que seleccionar la opción de Hosting (la primera, configurar archivos para Firebase
Hosting), las seleccionamos con las flechas, y para marcar la deseada, precionamos "space". Una
vez para determinar que ya marcamos todas, damos click en enter.

=> Luego, tenemos la opción de crear un proyecto o seleccionar un proyecto ya creado, seleccionamos
dicha opción.
=> Luego podemos seleccionar entre varios proyectos que hay en firebase (si es primera vez, solo se
escoge el que creamos al inicio).

=> Luego se nos indica que cual directorio queremos usar como nuestro directorio público... en éste
caso tenemos una carpeta llamada public por el "React", entonces podemos usarla por lo tanto.
Vease que originalmente está como default en (public), asi que escribimos build, y le damos click en
enter.

=> Luego nos pregunta si queremos configurar aplicaciones de página única, preferiblemente escribimos
N y enter.

=> Queremos crear builds automáticas con github? Anteriormente ya lo hicimos, así que presionamos N
de nuevo y Enter.

=> Luego va a crear archivos... en caso de que nos diga un caso como .//index.html ya existe, sobre
escribir, mejor no marcarla, dependiendo de qué framework usemos normalmente éste ya tiene la base
como tal del programa, si lo llegamos a sobreescribir sería un problema. Así que de nuevo, presionamos
"N" y "Enter".

=> Luego se nos indica que la configuración de firebase se ha completado, volvemos a la página de firebase
y le damos click en siguiente.

/*Antes de darle siguiente, es importante explicar porque usamos build, build crea un archivo nuevo,
éste archivo como tal build es importante para formar la base ejecutable o a mostrar en público como
tal, es importante por lo tanto, apenas termine de ejecutarse, introducir el comando*/

$ npm run build

=> Éste comando nos permite construir nuestro programa desde build, hacer ésto es importante en 
react ya que casi siempre trabajaremos sobre un archivo npm

=> Luego nos da un comando para implementar finalmente el hosting de firebase.

$ firebase deploy

=> Luego de ejecutar se generan 2 URL con la dirección a la cual se puede ingresar para observar la
página web. Pero... ahora hay un cambio

=> Volvemos a nuestro proyecto dentro de firebase, nos vamos a hosting, y observaremos que el entorno
ha cambiado. Tenemos nuestro dominio en nuestro panel de control como tal. Las podemos abrir y checar
el contenido del entorno local.


Ahora cada vez que nosotros deseemos actualizar nuestra base de datos al firebase hosting... usaremos
nuestro "$ firebase deploy"





//Base de datos...

Aprovechando, una vez usando el comando:

$ firebase init

Deberíamos aprovechar y setear una base de datos a tiempo libre (Real Time Database)

Preferiblemente también deberíamos instalar nuestro sistema llamado:

$ npm install dotenv




Usar estos links como tal para ayuda
- https://www.youtube.com/watch?v=5n1-wQFoZtU

- https://www.youtube.com/watch?v=a-HMnyv75TQ

- https://www.youtube.com/watch?v=kOgZ8i2dZ7k
